// code generated using pythonref/generate_deprecated_falcon_epervier_test_vectors.py.
pragma solidity ^0.8.25;

import {Test, console} from "forge-std/Test.sol";
import "../../src/ZKNOX_NTT.sol";
import "../../src/deprecated/ZKNOX_falcon_epervier_old.sol";

contract ZKNOX_falcon_epervierTest is Test {
    ZKNOX_falcon_epervier epervier;
    //exemple of stateless initialisation, no external contract provided
    ZKNOX_NTT ntt = new ZKNOX_NTT(address(0), address(0), 12289, 12265);
    // forgefmt: disable-next-line
        uint256[512] psi_rev = [uint256(1), 10810, 7143, 4043, 10984, 722, 5736, 8155, 3542, 8785, 9744, 3621, 10643, 1212, 3195, 5860, 7468, 2639, 9664, 11340, 11726, 9314, 9283, 9545, 5728, 7698, 5023, 5828, 8961, 6512, 7311, 1351, 2319, 11119, 11334, 11499, 9088, 3014, 5086, 10963, 4846, 9542, 9154, 3712, 4805, 8736, 11227, 9995, 3091, 12208, 7969, 11289, 9326, 7393, 9238, 2366, 11112, 8034, 10654, 9521, 12149, 10436, 7678, 11563, 1260, 4388, 4632, 6534, 2426, 334, 1428, 1696, 2013, 9000, 729, 3241, 2881, 3284, 7197, 10200, 8595, 7110, 10530, 8582, 3382, 11934, 9741, 8058, 3637, 3459, 145, 6747, 9558, 8357, 7399, 6378, 9447, 480, 1022, 9, 9821, 339, 5791, 544, 10616, 4278, 6958, 7300, 8112, 8705, 1381, 9764, 11336, 8541, 827, 5767, 2476, 118, 2197, 7222, 3949, 8993, 4452, 2396, 7935, 130, 2837, 6915, 2401, 442, 7188, 11222, 390, 773, 8456, 3778, 354, 4861, 9377, 5698, 5012, 9808, 2859, 11244, 1017, 7404, 1632, 7205, 27, 9223, 8526, 10849, 1537, 242, 4714, 8146, 9611, 3704, 5019, 11744, 1002, 5011, 5088, 8005, 7313, 10682, 8509, 11414, 9852, 3646, 6022, 2987, 9723, 10102, 6250, 9867, 11224, 2143, 11885, 7644, 1168, 5277, 11082, 3248, 493, 8193, 6845, 2381, 7952, 11854, 1378, 1912, 2166, 3915, 12176, 7370, 12129, 3149, 12286, 4437, 3636, 4938, 5291, 2704, 10863, 7635, 1663, 10512, 3364, 1689, 4057, 9018, 9442, 7875, 2174, 4372, 7247, 9984, 4053, 2645, 5195, 9509, 7394, 1484, 9042, 9603, 8311, 9320, 9919, 2865, 5332, 3510, 1630, 10163, 5407, 3186, 11136, 9405, 10040, 8241, 9890, 8889, 7098, 9153, 9289, 671, 3016, 243, 6730, 420, 10111, 1544, 3985, 4905, 3531, 476, 49, 1263, 5915, 1483, 9789, 10800, 10706, 6347, 1512, 350, 10474, 5383, 5369, 10232, 9087, 4493, 9551, 6421, 6554, 2655, 9280, 1693, 174, 723, 10314, 8532, 347, 2925, 8974, 11863, 1858, 4754, 3030, 4115, 2361, 10446, 2908, 218, 3434, 8760, 3963, 576, 6142, 9842, 1954, 10238, 9407, 10484, 3991, 8320, 9522, 156, 2281, 5876, 10258, 5333, 3772, 418, 5908, 11836, 5429, 7515, 7552, 1293, 295, 6099, 5766, 652, 8273, 4077, 8527, 9370, 325, 10885, 11143, 11341, 5990, 1159, 8561, 8240, 3329, 4298, 12121, 2692, 5961, 7183, 10327, 1594, 6167, 9734, 7105, 11089, 1360, 3956, 6170, 5297, 8210, 11231, 922, 441, 1958, 4322, 1112, 2078, 4046, 709, 9139, 1319, 4240, 8719, 6224, 11454, 2459, 683, 3656, 12225, 10723, 5782, 9341, 9786, 9166, 10542, 9235, 6803, 7856, 6370, 3834, 7032, 7048, 9369, 8120, 9162, 6821, 1010, 8807, 787, 5057, 4698, 4780, 8844, 12097, 1321, 4912, 10240, 677, 6415, 6234, 8953, 1323, 9523, 12237, 3174, 1579, 11858, 9784, 5906, 3957, 9450, 151, 10162, 12231, 12048, 3532, 11286, 1956, 7280, 11404, 6281, 3477, 6608, 142, 11184, 9445, 3438, 11314, 4212, 9260, 6695, 4782, 5886, 8076, 504, 2302, 11684, 11868, 8209, 3602, 6068, 8689, 3263, 6077, 7665, 7822, 7500, 6752, 4749, 4449, 6833, 12142, 8500, 6118, 8471, 1190, 9606, 3860, 5445, 7753, 11239, 5079, 9027, 2169, 11767, 7965, 4916, 8214, 5315, 11011, 9945, 1973, 6715, 8775, 11248, 5925, 11271, 654, 3565, 1702, 1987, 6760, 5206, 3199, 12233, 6136, 6427, 6874, 8646, 4948, 6152, 400, 10561, 5339, 5446, 3710, 6093, 468, 8301, 316, 11907, 10256, 8291, 3879, 1922, 10930, 6854, 973, 11035];

    // forgefmt: disable-next-line
        uint256[512] psi_inv_rev = [uint256(1), 1479, 8246, 5146, 4134, 6553, 11567, 1305, 6429, 9094, 11077, 1646, 8668, 2545, 3504, 8747, 10938, 4978, 5777, 3328, 6461, 7266, 4591, 6561, 2744, 3006, 2975, 563, 949, 2625, 9650, 4821, 726, 4611, 1853, 140, 2768, 1635, 4255, 1177, 9923, 3051, 4896, 2963, 1000, 4320, 81, 9198, 2294, 1062, 3553, 7484, 8577, 3135, 2747, 7443, 1326, 7203, 9275, 3201, 790, 955, 1170, 9970, 5374, 9452, 12159, 4354, 9893, 7837, 3296, 8340, 5067, 10092, 12171, 9813, 6522, 11462, 3748, 953, 2525, 10908, 3584, 4177, 4989, 5331, 8011, 1673, 11745, 6498, 11950, 2468, 12280, 11267, 11809, 2842, 5911, 4890, 3932, 2731, 5542, 12144, 8830, 8652, 4231, 2548, 355, 8907, 3707, 1759, 5179, 3694, 2089, 5092, 9005, 9408, 9048, 11560, 3289, 10276, 10593, 10861, 11955, 9863, 5755, 7657, 7901, 11029, 11813, 8758, 7384, 8304, 10745, 2178, 11869, 5559, 12046, 9273, 11618, 3000, 3136, 5191, 3400, 2399, 4048, 2249, 2884, 1153, 9103, 6882, 2126, 10659, 8779, 6957, 9424, 2370, 2969, 3978, 2686, 3247, 10805, 4895, 2780, 7094, 9644, 8236, 2305, 5042, 7917, 10115, 4414, 2847, 3271, 8232, 10600, 8925, 1777, 10626, 4654, 1426, 9585, 6998, 7351, 8653, 7852, 3, 9140, 160, 4919, 113, 8374, 10123, 10377, 10911, 435, 4337, 9908, 5444, 4096, 11796, 9041, 1207, 7012, 11121, 4645, 404, 10146, 1065, 2422, 6039, 2187, 2566, 9302, 6267, 8643, 2437, 875, 3780, 1607, 4976, 4284, 7201, 7278, 11287, 545, 7270, 8585, 2678, 4143, 7575, 12047, 10752, 1440, 3763, 3066, 12262, 5084, 10657, 4885, 11272, 1045, 9430, 2481, 7277, 6591, 2912, 7428, 11935, 8511, 3833, 11516, 11899, 1067, 5101, 11847, 9888, 1254, 11316, 5435, 1359, 10367, 8410, 3998, 2033, 382, 11973, 3988, 11821, 6196, 8579, 6843, 6950, 1728, 11889, 6137, 7341, 3643, 5415, 5862, 6153, 56, 9090, 7083, 5529, 10302, 10587, 8724, 11635, 1018, 6364, 1041, 3514, 5574, 10316, 2344, 1278, 6974, 4075, 7373, 4324, 522, 10120, 3262, 7210, 1050, 4536, 6844, 8429, 2683, 11099, 3818, 6171, 3789, 147, 5456, 7840, 7540, 5537, 4789, 4467, 4624, 6212, 9026, 3600, 6221, 8687, 4080, 421, 605, 9987, 11785, 4213, 6403, 7507, 5594, 3029, 8077, 975, 8851, 2844, 1105, 12147, 5681, 8812, 6008, 885, 5009, 10333, 1003, 8757, 241, 58, 2127, 12138, 2839, 8332, 6383, 2505, 431, 10710, 9115, 52, 2766, 10966, 3336, 6055, 5874, 11612, 2049, 7377, 10968, 192, 3445, 7509, 7591, 7232, 11502, 3482, 11279, 5468, 3127, 4169, 2920, 5241, 5257, 8455, 5919, 4433, 5486, 3054, 1747, 3123, 2503, 2948, 6507, 1566, 64, 8633, 11606, 9830, 835, 6065, 3570, 8049, 10970, 3150, 11580, 8243, 10211, 11177, 7967, 10331, 11848, 11367, 1058, 4079, 6992, 6119, 8333, 10929, 1200, 5184, 2555, 6122, 10695, 1962, 5106, 6328, 9597, 168, 7991, 8960, 4049, 3728, 11130, 6299, 948, 1146, 1404, 11964, 2919, 3762, 8212, 4016, 11637, 6523, 6190, 11994, 10996, 4737, 4774, 6860, 453, 6381, 11871, 8517, 6956, 2031, 6413, 10008, 12133, 2767, 3969, 8298, 1805, 2882, 2051, 10335, 2447, 6147, 11713, 8326, 3529, 8855, 12071, 9381, 1843, 9928, 8174, 9259, 7535, 10431, 426, 3315, 9364, 11942, 3757, 1975, 11566, 12115, 10596, 3009, 9634, 5735, 5868, 2738, 7796, 3202, 2057, 6920, 6906, 1815, 11939, 10777, 5942, 1583, 1489, 2500, 10806, 6374, 11026, 12240];

    //stateful initialisation
    function setUp() public {
        bytes memory bytecode_psirev = abi.encodePacked(psi_rev);

        address a_psirev; //address of the precomputations bytecode contract
        a_psirev = address(uint160(0xcaca)); //here it is etched, use create in the future
        vm.etch(a_psirev, bytecode_psirev); //pushing psirev bytecode into contract todo : replace with create

        bytes memory bytecode_psiInvrev = abi.encodePacked(psi_inv_rev);

        address a_psiInvrev; //address of the precomputations bytecode contract
        a_psiInvrev = address(uint160(0xa5a5)); //here it is etched, use create in the future
        vm.etch(a_psiInvrev, bytecode_psiInvrev); //pushing psirev bytecode into contract todo : replace with create

        ntt.update(a_psirev, a_psiInvrev, 12289, 12265); //update ntt with outer contract

        epervier = new ZKNOX_falcon_epervier(ntt);
    }

    function testVector0() public view {
        // public key
        // forgefmt: disable-next-line
        address pk_0 = address(728199263750570446964354330903202655824594974439);

        // signature s1
        // forgefmt: disable-next-line
        uint[512] memory tmp_s1 = [uint(12266), 12200,149,6,12287,12192,12150,12174,4,220,12054,12261,12223,4,11925,60,12231,408,12145,11933,11889,11864,12246,453,12049,11921,22,23,12174,140,201,12262,48,165,12195,12032,12154,239,12279,152,273,173,323,68,104,12173,213,61,23,118,183,317,12288,151,100,41,12190,12160,39,12278,12274,12162,202,11975,101,12106,7,12288,140,11835,219,12060,16,12232,12152,29,80,38,11917,12146,113,34,71,1,12182,16,246,83,12112,86,19,11869,12112,12236,12154,12279,60,88,12170,12097,115,12114,37,49,12202,63,12141,12193,89,12179,12187,244,60,12145,12244,12274,101,108,59,76,12277,12144,37,100,189,12103,12096,12029,58,127,12192,12283,224,187,98,60,12226,12178,71,269,105,12241,244,12251,26,236,14,12169,205,176,94,45,12173,210,8,12278,38,12105,12136,247,12117,306,74,12136,12219,12175,12139,167,20,105,69,49,105,12167,37,11982,155,237,10,12079,12063,11972,19,12260,12119,33,12058,12189,115,12207,12258,12167,12287,84,186,93,12224,99,12143,12148,198,12198,337,11824,6,12242,90,234,155,16,12110,11940,12146,12283,326,12229,11965,409,176,12061,11976,94,12038,12258,330,392,12219,12234,12067,12227,34,176,12029,12011,94,2,165,10,17,12231,73,12172,12049,12241,12277,12253,270,12071,12258,12212,12255,123,31,181,12172,16,12062,327,358,12184,12209,12225,277,12187,114,12212,12279,22,12140,57,152,12029,12285,12105,12153,12255,12175,12200,12265,12147,12196,12135,145,12123,12056,12084,12243,12286,12168,81,82,12159,12044,202,83,11920,12259,12237,34,386,12151,12254,12220,12191,175,12113,267,12076,5,12182,12005,12193,12039,12260,101,1,12236,55,11987,12257,247,12136,12097,12275,12266,68,46,62,12189,12242,77,12220,12137,87,12137,48,12023,124,12238,182,37,77,6,12111,243,12019,85,12253,12157,11972,171,12205,12120,74,12007,12288,12012,12259,81,126,177,218,12269,12282,126,12100,157,35,11949,115,12254,12161,12246,131,43,81,12162,149,453,12020,12261,12033,302,12136,12254,12164,119,216,42,183,352,12281,12120,232,12251,18,341,112,0,12288,12285,12259,12285,12072,91,153,11983,143,12151,272,12089,12088,12281,190,62,12010,165,12114,96,126,284,292,14,109,1,71,60,71,12168,11,12235,151,337,148,12137,12162,12127,12112,20,398,248,234,2,12068,7,12243,357,109,246,12227,12168,12126,12267,12200,74,12191,12246,218,12144,12046,134,12100,0,210,12127,12251,126,12217,12002,37,174,12281,4,12133,12225,87,12195,12206,12268,12114,12068,11948,12192,11874,75,185,12143,12278,13,262,11991,348,172,132,11970,172,273,12277,12127,3,12171,106,1,12020,151,300,12169,12009,66,12252,123,12284];

        // signature s2
        // forgefmt: disable-next-line
        uint[512] memory tmp_s2 = [uint(12205), 12232,146,280,180,43,12281,12002,126,12204,17,74,12196,360,189,128,39,104,12143,81,54,17,103,12249,12261,12227,12170,12184,12199,180,9,12204,198,135,12244,12132,12257,12249,27,12030,340,48,12185,12270,206,12139,47,51,44,11998,12196,251,6,12185,12095,157,12013,187,19,227,173,103,14,12256,161,378,12245,12131,12268,11886,184,11999,12257,229,12003,64,15,11997,12288,70,12015,12258,12188,194,12162,122,12269,21,292,11961,210,12152,12147,147,90,12036,101,12215,198,12136,12152,14,12278,198,23,12253,12181,12220,25,15,10,11972,4,104,12285,0,58,12170,12153,180,267,12167,77,12288,300,115,12202,151,42,12172,12179,12245,12206,11938,12152,12033,11958,93,11,11892,12199,422,80,12272,12168,14,12107,211,202,49,28,12118,168,70,64,93,12211,12006,55,12160,12071,156,12278,84,12004,160,12172,12167,12001,11968,141,11950,147,12238,12147,12165,12137,54,181,11990,251,64,12125,12017,160,77,12253,12063,12110,12115,82,48,138,12215,12098,12190,12189,80,12053,160,244,12210,151,10,12271,12250,12259,198,121,12184,12142,165,12237,12283,6,170,201,12147,12229,131,106,125,6,368,12147,57,11803,48,202,12268,12161,12103,120,12028,117,156,12246,12246,12079,12162,12281,12259,27,135,69,12227,171,161,215,12143,12125,23,11848,12041,12281,178,12050,12,108,114,12228,12142,12222,77,12194,12213,172,232,5,143,317,20,12100,12130,12006,97,12223,197,61,152,12277,12270,18,5,158,12140,12113,12233,12288,12008,12211,11975,12230,12287,12163,151,144,118,279,12144,12170,12113,12037,86,150,12172,63,12279,12252,12143,12169,91,116,12028,12227,28,12215,12088,12067,11933,12284,67,12004,209,12217,80,223,12196,33,12238,9,230,12074,12189,193,12265,100,23,55,11999,12186,12185,12278,174,97,12112,12216,169,196,207,2,215,12106,257,174,12194,87,178,12191,110,210,203,12034,17,105,16,66,139,55,11901,114,12210,131,12275,6,62,11896,352,429,63,12154,156,17,12046,149,5,63,12135,299,12125,355,126,12148,12029,12251,179,12148,86,13,107,133,136,38,268,277,12195,92,12281,76,84,4,12077,12088,136,12263,12171,12069,112,12226,109,62,12045,12220,12183,223,12164,12169,12210,12253,64,12218,246,12150,12250,72,232,12275,12105,12213,134,34,12201,15,11996,12128,5,12024,12098,11987,133,121,107,11921,11996,48,12200,12119,172,240,12245,12111,12245,12213,12222,30,25,12237,12237,417,12088,12061,12265,12266,216,12193,156,222,12228,12244,12072,12132,2,87,96,12198,19,64,194,105,120,51,73,11918,120,188,128,47,12010,226,12284,3,49,12211,12279,245,12115,44,12147,12008,42,51,12192];

        ZKNOX_falcon_epervier.Signature memory sig;
        // signature s2 inverse ntt
        // forgefmt: disable-next-line
        uint[512] memory tmp_s2_inv_ntt = [uint(1004), 11012,11536,2014,3208,1947,4134,1181,9789,3243,4543,10115,10846,5220,3079,683,12048,8690,12260,11362,2912,3479,5968,4197,3088,11244,3417,4251,10445,3606,7532,3034,12238,2213,1290,4408,6618,7777,2348,2292,5672,2701,1658,3616,206,4516,2311,6215,9184,4013,10177,2132,794,954,5684,6039,2910,5621,11334,6373,12265,5688,7023,4787,6284,7809,10172,912,7870,9289,8563,5791,10040,3787,3532,6170,5169,2071,5426,4170,11972,1111,5793,4265,7301,9940,12274,11303,8221,6549,11110,3775,4468,4216,1280,1880,169,1446,9983,5634,6338,8906,1482,6038,3273,3356,1552,9736,9021,7677,12234,7492,2923,3466,5529,8459,3506,11861,3727,11118,10924,5920,10069,11099,9184,5766,10624,4935,7660,5288,11803,10542,909,3806,7805,104,6717,1177,7438,7779,11956,313,6208,4589,2820,545,4692,4574,9470,331,5810,4825,4780,8873,6038,5663,9759,1084,9139,6604,7726,9960,1459,1887,4310,1968,2581,1420,4056,6992,10261,2921,6810,7386,9168,984,8624,1003,9551,11276,11812,5854,9222,9725,1335,739,661,801,7850,113,6104,4700,8192,6051,11272,11871,10022,638,701,2482,4122,10334,882,4136,9084,5026,4313,109,7477,4543,7009,2652,6890,1072,2772,10157,4522,7622,5193,12185,1785,4523,4948,1989,2964,9250,4945,10831,11596,4591,10712,10925,4620,2826,4078,10758,6648,4653,10461,3310,3917,8842,2297,9489,5137,11802,8757,4921,8286,6145,5404,3473,1025,3138,1994,9687,3949,6406,1768,3668,1728,8138,9152,6661,11039,1813,243,7593,4616,4573,2149,5270,8362,10011,7872,9585,7582,4209,2489,5746,10359,10386,10392,6456,8324,281,2036,4673,6409,6486,6276,6579,2357,8,2245,7225,6067,7978,7252,367,4428,404,2367,12156,7559,1170,437,490,10160,8322,2351,7665,2325,10099,3973,2840,10735,3232,5929,7627,2057,2983,11022,7105,8755,457,10871,8322,5143,6433,1240,7225,7556,9239,8304,159,1543,7031,3137,6766,2513,1751,2283,3790,12034,11894,6694,11101,8251,11548,4093,9944,12259,1830,11669,2410,3016,11823,11519,3699,8416,11277,8298,8353,6909,3048,3546,8062,10309,10434,7950,6993,11558,9385,60,5479,5385,3244,5828,7108,11179,5257,9531,729,6830,5638,3192,2710,1399,11111,5513,983,10879,5753,6642,788,10350,5482,6354,463,8997,8405,8813,11972,11191,5185,8181,3067,6847,2699,7047,9285,546,1374,5097,6624,5139,9501,9957,5860,9947,8878,733,11654,9176,7455,5433,7119,8979,1293,11004,4262,1270,9324,5044,557,1463,8252,8755,9970,11645,546,9346,8255,293,1736,7173,5044,10958,10813,4318,5220,6230,6293,4200,4038,1109,1101,360,1855,1483,10353,829,5407,9318,1663,5398,7716,11984,7572,5182,4680,5951,7295,309,8824,2975,8570,11718,2619,1251,11555,8391,10121,8876,9829,5397,441,12057,1116,7279,7760,5753,11297,6907,3651,4972,1612,11214,3847,6744,7943,8083,9565,10278,3718,3078,2872,50,10903,10036,11290];
        for (uint256 i = 0; i < 512; i++) {
            sig.s1[i] = tmp_s1[i];
            sig.s2[i] = tmp_s2[i];
            sig.hint[i] = tmp_s2_inv_ntt[i];
        }
        // message
        bytes memory message = "My name is Renaud from ZKNOX!!!!";
        sig.salt =
            "\x46\xb9\xdd\x2b\x0b\xa8\x8d\x13\x23\x3b\x3f\xeb\x74\x3e\xeb\x24\x3f\xcd\x52\xea\x62\xb8\x1b\x82\xb5\x0c\x27\x64\x6e\xd5\x76\x2f\xd7\x5d\xc4\xdd\xd8\xc0\xf2\x00";
        address recovered_pk_0;
        recovered_pk_0 = epervier.recover(message, sig, true);
        assertEq(pk_0, recovered_pk_0);
    }

    function testVector1() public view {
        // public key
        // forgefmt: disable-next-line
        address pk_1 = address(728199263750570446964354330903202655824594974439);

        // signature s1
        // forgefmt: disable-next-line
        uint[512] memory tmp_s1 = [uint(12204), 386,194,12089,12058,12194,12269,12174,503,12103,52,69,95,12027,12006,124,12143,12143,178,11954,12260,12235,6,12275,117,12158,12108,12198,73,12244,12073,12161,12180,12102,12157,11961,12153,374,12200,36,12275,48,124,12229,238,134,144,12186,12200,12122,11739,11986,12049,12269,12190,5,258,11931,33,12207,59,12248,366,12282,63,34,12085,12110,12225,11975,12087,60,44,207,12159,12213,35,12274,171,12279,169,12278,63,12222,12142,15,98,36,12265,12052,12256,12228,129,12166,87,12080,12238,11949,107,264,12221,28,12267,38,12059,12212,12229,12106,12246,47,12287,146,158,146,66,57,125,12229,48,12256,357,118,12201,11828,473,12143,27,6,12186,79,121,21,71,11962,249,379,12188,12230,119,267,134,313,134,266,11864,11755,12234,11964,12211,43,20,12127,12193,61,12227,12167,12144,12268,154,58,12239,105,151,12258,358,89,12053,12251,71,11956,38,76,12271,12085,20,43,12006,12124,12074,12171,13,133,12197,302,12208,12222,420,303,172,12171,12214,12245,12152,12257,26,181,29,12245,17,11998,422,11916,11960,16,16,12016,143,83,12199,12076,103,12081,12195,108,12281,12179,40,54,12268,12164,12133,77,12,12098,32,12241,225,286,148,92,437,91,66,11863,12231,52,97,11922,9,12275,238,4,215,94,12278,252,12265,35,12184,12073,256,118,93,12149,258,134,12256,33,94,11852,199,12277,291,203,12192,12010,12138,322,83,12272,12177,45,50,12044,30,12259,12260,12176,12232,12114,12262,30,12228,12059,12037,348,12265,155,12148,12247,12219,76,205,12267,12258,16,11893,12158,121,168,12204,12089,111,72,55,12276,213,13,12235,12,12281,12037,12238,12095,193,78,12129,12153,167,12119,67,183,12033,367,84,12250,12241,12127,137,12209,191,286,6,12263,12081,240,231,147,12259,12223,12120,12165,12224,12119,38,145,335,23,12216,280,12254,12001,136,111,12088,385,55,18,12170,177,6,12047,12106,12287,193,12008,75,12132,127,12129,11921,12270,104,318,68,12184,225,106,12233,118,12186,12251,12011,12217,105,12220,12002,7,12197,12286,50,1,33,364,12012,12155,12163,12202,199,12048,12093,258,4,12266,12029,48,12203,12259,12081,12283,12254,1,78,358,199,123,101,12251,12241,12240,12123,162,150,12273,215,12271,85,12252,12045,53,12248,12180,118,12176,117,12226,129,12014,12130,12204,272,12224,102,253,454,12141,99,12122,11883,12098,12246,186,12240,12127,340,12266,29,49,12165,12147,12073,12157,12260,12020,12126,70,12273,12264,71,93,12072,12237,54,1,12250,12111,12244,192,33,111,12233,98,178,197,213,66,12281,11903,12265,21,72,12105,12212,12225,12203,299,11939,205,12213,106,12057,425,116,12186,12222,12220,20,105,19,12228,12211,385];

        // signature s2
        // forgefmt: disable-next-line
        uint[512] memory tmp_s2 = [uint(201), 245,12233,12281,12269,12129,59,12080,186,20,12176,12286,154,12245,182,12135,30,12245,12132,11944,124,20,3,12124,80,243,98,104,12089,12276,12195,215,12189,12187,82,12227,105,98,12277,23,12046,199,12186,60,54,12242,260,169,146,12108,127,12256,12255,12124,12212,12211,12206,317,12239,61,112,189,12215,110,282,12211,12126,17,61,254,33,27,12223,12194,12233,12251,12141,29,12158,30,198,12258,80,11917,12160,12211,287,11973,125,12058,12178,213,12216,12204,12251,12135,177,12263,12261,94,12172,12141,81,11933,179,12151,223,311,12190,12043,139,11983,12132,163,12205,12235,183,12219,221,26,12273,12056,12204,12150,12216,12188,209,189,9,51,12106,11993,143,12101,68,167,12108,262,188,152,26,219,12170,84,12126,12176,221,12069,11936,418,12283,137,413,12205,452,61,12286,12180,12125,92,12240,13,12173,12044,95,142,12204,134,173,277,76,12224,52,361,106,12141,168,229,12116,12190,12055,12028,12169,68,12063,78,20,12074,12052,11933,37,34,314,12162,145,12133,47,4,12272,375,96,12220,191,28,24,171,12138,12105,39,12107,12097,124,301,12075,12237,279,12161,11976,11996,29,161,272,12185,163,12167,85,12006,11876,12269,213,12,251,11918,12211,12236,12213,11906,193,12227,12239,12235,99,11898,12188,12137,12094,12088,12102,12065,121,72,80,12096,12123,23,33,275,130,12206,89,283,394,216,2,12244,12284,12180,12246,12037,12246,247,78,35,355,74,52,12125,295,12139,12223,88,12259,12279,12142,227,12140,244,140,12251,12133,12284,169,306,18,12156,44,12263,53,42,362,12185,215,12139,11918,12172,12243,12014,12132,138,12191,6,11939,12023,31,110,12196,53,10,5,88,151,45,12209,37,4,189,12144,12176,12182,12108,131,223,207,88,176,63,106,44,12254,92,12162,10,12246,185,12004,12279,43,12213,12242,56,12255,229,12228,4,26,114,206,20,239,127,177,12126,12197,12019,12128,29,12222,11877,12226,113,159,12173,12231,200,12075,83,76,12170,78,330,21,86,12256,12163,146,16,165,12215,12145,227,11889,295,219,12255,42,12237,92,12113,12267,201,12161,12178,69,192,12206,334,28,11972,12132,251,12210,12215,39,12208,52,427,60,5,12224,11878,125,50,182,12232,12129,90,304,29,12193,16,12280,11896,12212,48,12188,12205,12263,12246,11889,12161,55,128,100,79,11943,122,152,12059,353,12246,12114,12091,12029,12209,15,12231,15,12062,228,409,11950,11786,290,12127,11944,12265,59,11863,12243,12174,27,11647,12079,131,12259,26,35,12283,80,21,316,12214,12187,12172,12257,12205,12248,142,12211,299,12041,241,12281,12231,12286,24,12280,89,12270,112,12231,136,12080,48,394,12147,71,12279,338,12138,289,42];

        ZKNOX_falcon_epervier.Signature memory sig;
        // signature s2 inverse ntt
        // forgefmt: disable-next-line
        uint[512] memory tmp_s2_inv_ntt = [uint(9074), 11523,5345,3775,4440,5545,1762,3423,2724,2610,10569,399,7546,8989,11083,11493,9214,7882,11080,7045,4277,7607,4343,8020,7065,3849,1558,3192,6821,10430,847,8904,65,7268,3544,1377,5948,12128,6039,4722,1397,10407,1403,9350,8866,4205,9877,2201,766,3176,9775,9701,6596,11114,10395,2060,3228,6229,2013,3068,2996,4582,6872,4251,1101,9727,3615,9649,2498,11151,2304,7711,4604,3233,8349,5054,5639,5445,11972,1554,5578,8607,8539,11205,3088,7958,10959,8949,628,6491,1035,6071,7659,7205,9187,3381,1166,8591,4722,3162,2856,6723,11299,9917,4871,10532,127,9299,8028,8321,7191,9610,6289,7667,10777,565,11934,1040,11684,9954,6153,8209,2637,6437,12080,11719,3604,5426,1232,6603,3482,4622,2597,9750,12009,77,5377,475,2882,9589,8358,3649,9194,7703,1685,10674,12066,11203,10316,5786,9521,8735,568,10207,9330,1311,11374,4559,5238,10948,7802,4482,10550,5125,9643,11817,4698,1913,4638,11241,9163,578,10687,8549,4442,5498,2273,9710,11482,12050,6363,11765,2985,8194,3678,12241,11930,9989,10333,10635,7682,11560,4704,5549,10992,6005,7624,8170,5765,2673,1059,5647,2063,3605,3273,3839,477,3760,10082,1398,6652,2282,10592,2613,9808,9400,10518,8460,9425,9603,6979,10811,11045,4392,7349,8355,622,790,9601,2494,6705,5967,6905,9636,11840,3116,2149,1994,8074,2269,11965,1361,12070,9451,3899,7224,3735,11414,228,6471,8041,7921,8772,6536,3653,268,1354,7820,12058,8143,1723,1815,6476,1046,9507,3740,8345,3654,11536,9984,7596,8322,4573,3666,1236,8050,11620,9296,2120,11230,9595,9754,196,8615,5205,1093,9158,10354,2403,7722,9309,4832,11678,7411,2691,1139,790,9279,8061,1756,4260,11156,9146,2863,571,8087,375,7488,12149,758,2719,2263,9366,2527,11613,10423,12227,7815,7338,6720,9990,1604,8638,10150,5383,5582,4530,7499,8813,1382,8510,4379,11352,167,10337,10429,11870,1882,8189,2124,10699,9003,8548,9026,1545,3599,10635,12066,11065,1298,9674,11852,11017,1619,8233,1131,9565,10513,2708,6298,3702,4340,4023,4235,10493,9673,7089,12178,4357,10825,2249,6303,2918,9033,1553,7730,10012,5539,8764,2043,3828,1983,5518,4738,2954,638,1268,7223,11516,5260,2694,8483,7955,12033,5209,753,10610,1024,10259,2044,1198,8433,8132,5808,9334,10177,2334,8605,8519,6713,90,1065,10349,9248,2399,7449,9789,3589,1429,5450,10860,7914,8047,10639,5470,9602,6178,7629,1214,7570,6342,5945,2586,7516,10193,5327,3194,8238,671,8570,10417,3018,2555,9336,6814,11926,10077,4026,7403,4752,4769,6922,4250,12250,8228,3209,3620,7119,4320,9054,5855,10007,12029,3709,9767,4913,9247,3403,2708,9060,8951,10955,5307,6579,4684,4885,8934,7063,2198,4542,1841,3762,11262,10136,8782,3828,5782,10120,9541,10161,3343,2446,8077,1760,2710,7627,1591,10393,5737,2450,11811,3165,11624,8451,9045,1388,11268,12030,9734,9086,2027,11432];
        for (uint256 i = 0; i < 512; i++) {
            sig.s1[i] = tmp_s1[i];
            sig.s2[i] = tmp_s2[i];
            sig.hint[i] = tmp_s2_inv_ntt[i];
        }
        // message
        bytes memory message = "My name is Simon also from ZKNOX";
        sig.salt =
            "\x34\x9e\xc7\x55\x46\xf5\x8f\xb7\xc2\x77\x5c\x38\x46\x2c\x50\x10\xd8\x46\xc1\x85\xc1\x51\x11\xe5\x95\x52\x2a\x6b\xcd\x16\xcf\x86\xf3\xd1\x22\x10\x9e\x3b\x1f\xdd";
        address recovered_pk_1;
        recovered_pk_1 = epervier.recover(message, sig, true);
        assertEq(pk_1, recovered_pk_1);
    }

    function testVector2() public view {
        // public key
        // forgefmt: disable-next-line
        address pk_2 = address(728199263750570446964354330903202655824594974439);

        // signature s1
        // forgefmt: disable-next-line
        uint[512] memory tmp_s1 = [uint(12271), 12173,12283,12127,12286,375,12182,50,142,12223,12127,140,12152,12075,31,243,12228,30,163,12287,11987,12122,12230,89,12175,198,12012,12052,12250,133,12126,12219,12007,12052,12256,12082,56,64,12287,12127,12258,109,4,144,12240,51,100,11906,11852,415,154,60,12066,12208,12181,12173,12211,94,11972,12046,128,266,12269,256,328,12240,63,104,112,12161,366,22,12226,11875,12219,355,115,11993,12173,12277,5,269,197,68,300,23,178,11857,12154,130,154,39,50,203,12262,174,187,12187,11992,202,12148,150,202,12214,156,46,12275,24,12254,11986,12285,279,425,143,364,12027,12190,59,91,33,189,97,35,86,12105,12132,69,12275,12216,12156,126,143,239,12217,12150,12,28,7,287,233,57,12151,12200,67,12086,26,12203,28,97,12050,184,389,4,12091,12165,43,12112,12262,12209,12136,12211,144,12238,16,12210,12017,12250,117,12181,369,16,166,12137,41,12124,12158,12029,51,12259,167,9,43,10,121,66,174,12029,158,309,46,12206,155,63,10,219,51,12145,12144,12114,106,113,135,12214,282,12275,73,11899,73,103,12119,105,18,59,53,12071,151,12040,12152,141,12111,38,53,12061,66,12262,12149,12268,12097,192,199,12276,247,12246,12160,12147,206,12284,12162,91,12021,12197,12284,12119,12198,12277,299,5,12173,181,12013,12222,3,52,201,194,131,12234,134,12120,12259,12123,12111,12179,12185,12029,227,268,12246,12054,59,12283,12028,45,59,12181,12088,75,12147,12239,12271,207,206,12122,312,12134,12082,194,9,12120,94,70,279,12273,19,12190,12162,12208,96,11999,160,218,122,75,151,12243,31,12122,135,108,359,51,12012,11971,60,12254,12107,251,91,12278,331,12181,5,12270,53,12095,190,71,12228,12057,12285,90,12265,12115,39,117,12101,12081,60,34,131,12251,12146,12251,12021,12278,12263,11919,12288,154,119,14,16,219,86,43,202,12268,115,12058,12223,12244,305,292,241,285,168,283,12226,70,169,278,12214,12272,42,12098,150,44,12187,168,12199,12160,27,12217,12085,126,12142,103,226,12206,45,58,102,12250,11733,203,178,12209,70,65,269,339,12127,90,136,12168,12237,12271,12036,12035,151,256,62,124,12225,371,337,76,12233,12084,12259,12212,12233,12051,12202,50,144,256,7,73,74,54,287,12242,12287,12218,156,21,160,12237,12003,341,12090,12247,342,47,12000,12255,43,12179,11983,53,37,43,12180,65,80,441,24,12171,11927,12236,120,11917,12136,83,271,99,42,114,144,12040,12157,12232,12230,11920,12168,12237,23,57,214,12255,80,336,11950,23,144,248,11923,12101,12191,172,12261,12162,10,12284,12243,251,11,12287,12198,12183,78,12161,12059,12164,29,158,231,363,16,47,150];

        // signature s2
        // forgefmt: disable-next-line
        uint[512] memory tmp_s2 = [uint(12125), 12075,12019,11986,12100,25,63,43,11967,34,11931,12040,32,12285,12243,279,11882,41,12210,409,15,92,164,12199,12116,12281,249,12090,173,179,89,12263,83,12260,119,279,12283,180,2,69,264,86,12147,81,201,12155,12287,62,12247,40,140,557,12108,209,91,12277,147,127,259,151,136,110,300,285,21,186,12211,12268,12283,12090,11904,170,65,226,12276,189,12197,40,12234,12096,99,236,13,273,12048,12217,12212,12047,79,12278,12016,222,9,31,12271,12,446,12009,126,24,145,6,96,155,114,5,12270,135,12206,12275,12239,98,147,12281,113,12094,130,85,0,183,16,123,94,195,126,181,12133,12119,12259,12284,1,172,12235,44,34,12192,92,12106,12186,12024,12194,12246,12229,12271,9,12196,38,12126,12120,57,66,12135,65,82,155,128,40,40,11954,12110,3,12241,235,12197,187,105,12128,141,71,12241,149,12263,11901,12003,49,73,276,218,12027,10,77,44,43,12108,330,237,12272,207,12199,12236,11995,12245,151,12272,12144,12107,12117,12246,49,45,12177,12275,12261,55,12107,91,257,177,74,122,12193,317,189,12009,194,11967,266,12229,12208,12239,12256,352,12239,12184,12040,207,12115,102,12224,96,17,12202,12189,12139,237,12263,67,55,12265,98,12223,14,241,100,12084,12071,337,11898,11909,215,12034,231,12203,102,12008,12239,186,217,333,363,112,12220,11903,102,101,9,150,31,71,8,152,68,11,146,145,35,12280,67,12083,65,27,78,12188,12267,192,109,51,171,12142,212,101,344,12092,12129,77,9,122,12013,12072,109,155,12215,12072,216,223,12262,12206,141,92,62,193,11879,199,67,181,12274,20,12187,212,12252,12185,194,3,12205,12240,12229,12145,37,110,56,12134,12175,12097,323,56,174,97,240,53,12284,12275,423,56,49,12079,12284,11934,75,12252,43,12115,12144,48,175,11977,12230,12257,242,138,101,12238,12189,104,0,76,179,12264,12232,19,91,163,12263,12019,12239,159,40,111,12141,12280,169,174,75,297,102,12198,68,179,301,333,18,55,12160,12126,68,12192,14,12202,12255,24,44,143,12128,12181,20,331,51,12282,12200,127,84,11795,152,416,155,12001,67,12195,12174,152,12123,12029,25,216,184,12223,12218,12200,12267,12092,12213,12104,12284,12142,12157,12266,12243,167,12147,96,105,12287,12120,12215,12265,12205,43,12095,12100,12276,12026,12028,12216,12204,12040,12079,92,12131,12142,26,317,139,12130,12087,136,12209,12219,29,50,4,12209,55,245,54,12247,12192,12128,33,10,12041,12177,12235,68,11893,12252,12265,166,152,12277,79,35,428,12268,12104,88,196,76,121,12108,22,12116,87,12223,15,114,12155,316,12161,39,34,12089,244,12019];

        ZKNOX_falcon_epervier.Signature memory sig;
        // signature s2 inverse ntt
        // forgefmt: disable-next-line
        uint[512] memory tmp_s2_inv_ntt = [uint(5870), 9697,2960,425,8049,10921,9407,1055,12236,1656,6042,10729,2005,6609,11627,1484,9298,3126,12138,11830,9042,7894,1527,7956,12281,1830,2251,11063,304,12153,12156,1335,1440,11369,2000,9371,3174,5479,2836,5738,12204,1557,5621,8433,5567,3350,1043,5517,99,3735,4370,9140,9077,5022,1431,1395,7831,11753,7510,11977,8027,6946,6732,6931,11281,11812,7529,9639,3799,10929,3466,12159,10172,3918,7359,11826,4343,3525,4670,5936,1923,3587,9415,4962,8121,6129,5039,4413,6765,8032,9116,6853,1702,10108,4548,1399,6132,7478,5842,9877,11976,861,8487,780,5132,12229,11883,4508,8626,3858,12261,6532,8052,11550,10670,559,864,6332,8929,11132,11937,3849,10636,6737,4661,1423,6150,6713,7860,2546,10619,455,11354,3171,11816,8336,7636,2673,3898,203,6658,8362,601,4430,3286,10312,7487,398,3281,4909,4066,9109,10042,5357,11618,1632,10184,3607,9663,12159,6741,8447,4749,7244,10288,578,4454,7741,395,6246,11472,8763,3281,11928,4027,6280,9231,1823,6191,11967,7368,9245,1640,1108,1267,11681,303,10241,12070,3708,6919,6386,3615,1597,7917,10114,6634,9168,8691,5481,5190,4550,1669,10067,7766,12034,2272,6552,2388,2498,1618,3010,2044,8497,10554,4513,2331,9407,6252,6970,10578,8167,5935,11141,4946,12117,4568,9284,1821,1985,8033,5377,11734,1440,10755,5213,3556,4809,6450,1464,10838,10478,1997,4078,5655,5884,9755,7385,9012,5653,9523,7551,2546,9384,5997,8784,7624,11116,3424,6589,3134,6686,3296,9283,1013,591,9806,7563,5069,825,1624,796,3506,11261,11909,6648,177,5331,2146,3171,9501,8243,2118,2345,6288,11681,9622,6194,1735,459,5644,7344,11262,7232,5517,5663,10214,7721,8427,9723,467,9460,12272,9445,11139,12206,5138,2451,4625,2139,5618,5513,2006,3416,5698,11187,8108,1997,5772,9297,7678,395,4704,1874,1039,782,11613,4315,665,7689,11110,9470,10506,2470,4748,10487,7491,9030,1429,1532,2278,8372,8834,9707,4840,7483,3730,1408,9005,10085,10950,2593,3264,3623,10365,1286,913,2754,6444,6613,4977,6387,7367,6431,5503,9244,8919,1543,9940,11345,5113,8683,9874,4622,8502,5272,8585,4561,7632,868,11675,11371,9726,5899,6740,3383,3260,4522,9955,1452,3956,8549,1351,8612,9506,3591,5225,1925,8857,6678,981,7991,9472,5442,9597,385,7240,529,1091,11027,5369,10321,11870,10484,7666,5128,11886,6867,10283,7060,11608,9495,12086,9843,5070,8481,5717,11612,1070,1798,8524,596,2186,2382,5676,6414,12246,9596,2068,10290,5059,8094,6274,8562,7564,1611,6102,3707,5511,12144,1488,2990,3196,9533,1125,4415,3249,2832,703,7672,6636,11963,816,6607,12202,7844,2177,6513,3272,4328,3808,9062,11741,11360,9828,9640,5118,3774,11632,7619,1146,8688,2578,610,5512,8297,7699,754,10187,1609,10559,10554,11654,3628,6807,5123,6439,11615,7597,11917,11694,118,9437,4624,1660,3101,236,11032,11817,2821,8866,11342];
        for (uint256 i = 0; i < 512; i++) {
            sig.s1[i] = tmp_s1[i];
            sig.s2[i] = tmp_s2[i];
            sig.hint[i] = tmp_s2_inv_ntt[i];
        }
        // message
        bytes memory message = "My name is Nicolas from ZKNOXtoo";
        sig.salt =
            "\xaa\xae\x31\x4e\xd9\x08\x3d\xab\x4b\x09\x9f\x8e\x30\x0f\x01\xb8\x65\x0f\x1f\x4b\x1d\x8f\xcf\x3f\x3c\xb5\x3f\xb8\xe9\xeb\x2e\xa2\x03\xbd\xc9\x70\xf5\x0a\xe5\x54";
        address recovered_pk_2;
        recovered_pk_2 = epervier.recover(message, sig, true);
        assertEq(pk_2, recovered_pk_2);
    }

    function testVector3() public view {
        // public key
        // forgefmt: disable-next-line
        address pk_3 = address(728199263750570446964354330903202655824594974439);

        // signature s1
        // forgefmt: disable-next-line
        uint[512] memory tmp_s1 = [uint(179), 179,12286,112,207,12009,115,12213,12260,140,12069,12200,5,12226,230,12145,226,95,12052,11918,226,12247,155,12154,12100,133,12203,18,287,12272,12281,12122,11969,12075,12181,28,137,12243,90,116,12215,12178,12162,131,265,12287,51,108,224,40,319,12270,253,240,12206,12003,100,44,22,226,11947,12261,29,11954,234,152,12286,113,12123,165,211,12208,12258,88,10,291,250,12172,12246,11807,12228,12265,172,110,124,12242,11890,12106,118,12145,179,12233,11990,12121,12232,264,145,157,12212,4,12115,12242,12242,12284,325,146,12162,12233,319,12249,8,12263,12211,132,151,88,76,12137,159,72,58,11941,12083,78,87,50,12065,187,205,12214,12276,113,12018,11893,12200,12188,117,115,12040,12076,12285,12201,12150,12182,547,12084,287,12118,22,12103,12201,33,219,469,12288,46,173,12246,12183,96,356,2,12167,12245,129,183,170,12072,93,12239,12229,12209,101,12133,12261,66,185,221,12154,12208,12160,105,11990,12250,12106,163,45,12065,15,12287,12156,133,152,12091,12250,12011,77,74,160,79,11995,320,12184,310,11953,12170,12128,184,12158,12268,129,110,12250,69,12165,12284,109,97,189,12264,12217,18,12185,344,12262,12233,12087,12266,12176,12046,12019,211,12251,117,12080,190,273,84,65,237,12158,12252,164,79,129,12107,16,275,11552,12259,194,12164,44,7,26,200,148,5,263,12264,12237,12080,6,236,110,53,12100,120,12248,226,12177,11981,11962,12011,12234,12254,125,13,340,12198,313,115,12168,166,83,12120,12075,12103,127,154,120,131,12221,12156,230,202,11909,100,12078,195,175,218,12242,163,476,12266,12264,213,11921,394,52,215,139,214,11992,11992,12229,11963,14,12274,99,12224,248,162,12195,12170,12158,99,12049,238,12034,272,12282,12218,175,12262,12163,12178,163,12133,12129,38,12202,33,199,12242,12104,12057,21,155,12159,12158,12223,3,53,12205,12248,74,12237,12035,11896,11969,207,12098,37,148,12106,12277,73,12218,11958,12007,12195,143,78,12162,12235,12159,214,12279,11,188,12148,7,12043,263,12154,18,17,351,11956,12023,11935,18,12156,12059,101,12100,12083,12186,112,12176,113,11789,12174,12090,238,59,225,12030,107,196,259,12131,12276,549,12199,12265,11918,16,202,125,39,209,216,200,141,76,83,12028,12178,12158,12205,11986,12285,126,12283,189,147,11888,12101,115,12199,56,21,247,186,12142,12122,11964,181,12167,12181,193,78,12085,12197,123,12233,415,195,12116,36,12033,12210,168,123,12213,12270,30,104,47,12266,12095,67,12257,66,43,12116,27,142,12172,12105,12009,105,123,12230,70,12157,12058,12147,287,12139,142,12190,12200,243,76,12176,12042,24,102,16,41,12203,269,18,54,12203,12260,12232,12176];

        // signature s2
        // forgefmt: disable-next-line
        uint[512] memory tmp_s2 = [uint(12283), 194,12247,19,12099,60,12116,12032,0,11972,12231,12098,6,12215,63,79,11745,94,12095,12255,12266,12027,12259,126,163,169,12234,12271,12191,60,12163,12089,1,12277,186,12197,86,129,301,57,114,12197,159,6,318,133,156,67,118,31,12242,100,12176,12176,12244,11864,102,74,459,9,57,12186,12280,12189,41,16,12281,12208,12220,206,12261,84,124,14,12158,12229,11827,12139,296,84,11923,12214,36,12264,12242,12238,12021,12123,12147,12187,179,8,190,12273,98,12236,301,12175,128,11936,42,12167,87,12229,177,1,12101,12001,12219,123,12239,12251,133,245,87,25,14,167,53,12211,19,12124,24,12049,73,22,131,146,12230,12267,201,12252,168,12112,6,181,196,12180,97,12220,12208,12124,12173,12189,12240,348,11990,315,12186,272,12001,97,24,83,12152,70,463,12046,12126,7,72,188,12271,153,12242,105,36,375,52,100,191,316,12061,12231,12130,440,12208,286,255,93,12189,12166,146,161,12172,228,132,51,12073,12248,12113,12178,258,12167,11977,3,12098,12207,94,12222,416,12129,179,11953,12168,12263,12207,12163,128,119,98,12224,12226,12220,251,187,12081,11856,12239,12285,69,12210,92,12133,152,19,36,48,152,12268,118,27,161,169,132,261,122,96,12207,12174,12009,7,109,12109,138,12125,83,12183,55,368,12206,12079,272,12081,12117,208,53,12210,12124,12004,12151,11959,12283,183,322,12196,116,186,142,68,12149,50,12029,12211,12234,91,31,11987,12076,144,204,227,115,12085,12099,12286,9,12211,12279,12080,305,12248,12095,12248,12148,12081,113,41,42,66,61,12015,12209,206,93,146,12018,12283,15,164,97,42,12160,11940,137,160,12269,12039,284,11952,41,213,328,12186,12149,288,12266,170,298,12170,12079,12264,11902,42,243,115,27,12038,12190,11942,23,23,12256,12184,12046,12235,181,12114,1,12138,111,13,20,214,12278,185,51,12240,3,291,12247,12236,120,159,27,12137,219,12253,12195,168,12081,12277,29,48,211,58,154,12020,12254,12281,11,123,286,155,47,90,12208,12284,12241,239,130,124,183,12272,12273,12134,12133,12209,27,12269,199,12133,145,2,219,12258,12121,4,218,12266,12258,439,70,72,138,99,53,267,12162,12113,12175,1,204,77,4,99,12246,12273,12155,111,197,58,12273,12135,422,42,12171,12090,44,57,472,11844,12047,12059,130,200,67,12211,11971,23,12088,161,12269,106,12192,12189,12119,12053,12077,12244,12261,166,227,12090,12211,0,12213,12095,12098,4,12185,12146,103,79,9,16,26,108,78,12189,12210,196,12228,12244,12179,12237,44,12154,12207,12227,134,12203,12278,12063,12192,141,12270,302,12089,118,122,12132,1,12211,12197,12053,137,12239,12204,199,12241,37];

        ZKNOX_falcon_epervier.Signature memory sig;
        // signature s2 inverse ntt
        // forgefmt: disable-next-line
        uint[512] memory tmp_s2_inv_ntt = [uint(10989), 11438,5869,3279,11684,9302,6042,1926,10594,4630,4053,10525,23,4657,1560,10278,1947,10140,5287,7908,4683,2173,10955,12197,4090,3064,3509,2125,4180,355,3885,5469,1742,8250,8487,10133,8534,714,10321,4231,9022,5487,5245,5538,7300,4537,164,8912,1610,11630,2856,2484,11371,2408,10110,8034,896,8699,5601,5141,11757,6438,4793,2229,7822,4949,5494,6581,1683,10704,5039,2097,2478,2117,5163,9308,1091,11802,8993,10548,2408,8939,8194,3694,8616,5998,11432,5602,7417,7399,3839,5117,691,7704,5779,3425,9847,4186,11685,9250,431,4478,4580,10321,5833,2286,7569,9963,8870,10525,512,2367,3394,6016,1622,9066,4599,7847,3733,4085,10087,8417,901,10093,3595,8892,8675,6424,10986,190,4691,6651,4677,70,6010,3641,10817,5092,4848,11410,9184,5624,8990,2383,12105,5603,8833,1608,1142,8364,3475,7208,11126,9969,8508,9523,11535,5986,3885,6830,310,10446,1149,11998,3076,3746,7961,2395,1603,10872,4557,5715,2888,4389,11408,6841,7528,12242,11033,5876,11859,7065,3107,10088,4615,11413,11877,4338,2864,5603,5711,11452,1783,10350,1331,1405,7151,3297,1341,5560,9301,9276,10076,11341,5402,1245,6804,11596,7794,4807,8086,6731,12005,11888,6311,11327,10894,8784,6912,419,8340,11494,1671,2475,1866,3962,2393,3342,7939,7221,11953,5161,6391,5923,7166,7000,10212,11402,10778,6873,4353,6300,7914,7508,123,5281,2555,2903,350,1274,528,117,9875,5971,8122,2841,8910,8669,1852,8946,6843,1728,10391,16,5468,8284,11569,11451,1934,6262,9044,6618,5825,1887,2070,5338,4203,8991,5218,4605,9458,2780,9974,1308,489,2192,6863,3614,10908,9092,847,9949,902,2265,10781,5353,4534,11511,3124,6846,3461,2886,7303,11578,969,4090,7354,3047,9805,2821,3868,10132,4261,10598,250,9531,1176,4057,6443,11060,3278,10097,1956,6998,881,2687,8721,4835,4350,11592,11554,9445,3830,417,7478,6737,10311,3912,138,4717,8936,3778,8373,6972,106,8856,2672,4842,2014,9206,4770,994,6105,9939,3539,2931,2341,5836,3921,11779,9522,7850,8423,6353,8768,2918,11062,6969,11231,4544,3443,8319,392,6371,6536,9633,152,3031,5688,10841,10097,8178,3784,247,9266,7376,3317,1271,1478,4562,10979,9116,1910,2847,11758,924,4272,1369,11259,11842,11800,8401,10091,651,9215,8094,5581,2437,8360,1080,11354,8929,1211,1110,7234,9168,8500,3152,9138,299,4945,927,10226,10744,6528,10905,5107,10676,760,11000,11464,6156,4421,3964,2601,526,6544,11737,3258,1277,6933,1762,11451,8601,4944,10608,5918,2089,673,11115,131,7996,5489,8162,9345,2923,644,8929,11151,3362,5744,6824,9382,628,2547,357,10207,8448,11506,5123,9576,10518,2137,779,6766,601,12178,11914,6846,11880,1286,37,7888,11299,4254,3066,2716,4517,10832,9877,5593,85,9044,9808,6965,7439,4256,8246,10091,10041,851,11163,4801,6943,1127,3767,8340,9139,12104,8573,11298,2332];
        for (uint256 i = 0; i < 512; i++) {
            sig.s1[i] = tmp_s1[i];
            sig.s2[i] = tmp_s2[i];
            sig.hint[i] = tmp_s2_inv_ntt[i];
        }
        // message
        bytes memory message = "We are ZKNox, you already know!!";
        sig.salt =
            "\xf9\xa6\x6d\x13\x68\xb2\x08\xe2\x1f\x7c\x10\xd0\x4a\x3d\xbd\x4e\x36\x06\x33\xe5\xdb\x4b\x60\x26\x01\xc1\x4c\xea\x73\x7d\xb3\xdc\xf7\x22\x63\x2c\xc7\x78\x51\xcb";
        address recovered_pk_3;
        recovered_pk_3 = epervier.recover(message, sig, true);
        assertEq(pk_3, recovered_pk_3);
    }

    function testVector4() public view {
        // public key
        // forgefmt: disable-next-line
        address pk_4 = address(728199263750570446964354330903202655824594974439);

        // signature s1
        // forgefmt: disable-next-line
        uint[512] memory tmp_s1 = [uint(12204), 131,111,12179,65,41,12226,9,27,12231,12235,11958,12227,12122,2,12279,39,20,12125,41,187,12119,12224,12231,12068,55,12040,23,80,12171,120,12124,80,31,211,12238,135,12016,136,106,122,12251,228,12085,33,11953,171,70,10,12073,216,11858,126,12249,250,12205,12201,201,333,12220,128,117,12137,82,156,217,219,12207,27,12174,12220,305,329,12078,12199,6,12236,12264,0,12262,12240,12041,12123,12206,12093,12106,301,66,139,12133,12214,0,12239,12214,12241,40,12114,12278,12192,290,236,12106,82,124,12138,12219,12174,99,31,12061,12059,174,12242,7,12130,87,180,54,12157,83,107,209,53,87,12223,11992,88,12199,357,33,12129,12232,67,12263,52,42,48,141,292,12149,12288,136,12169,12228,12224,12009,38,239,12161,11818,12222,12130,62,12031,12139,12191,12286,141,161,11975,12196,104,67,12075,12050,12106,133,85,12208,12257,134,207,117,12109,3,12231,84,290,28,12271,11971,220,12278,12155,110,12175,65,106,12238,12268,374,170,80,12261,12187,68,72,12134,357,10,356,94,63,12158,146,12087,69,2,12195,12288,136,12135,12220,244,12240,12281,12051,93,15,100,12171,327,166,29,12196,12010,120,7,12280,26,12202,379,14,194,82,12133,11907,12152,263,154,11997,211,12074,17,53,115,149,11886,133,251,256,170,55,51,12164,103,44,22,78,281,119,206,118,70,12169,12224,12234,116,29,12,104,135,247,12063,8,11973,314,12116,120,12238,271,390,12082,12104,198,175,177,304,81,12142,12221,12210,12198,12071,12102,12252,7,40,12226,283,151,12145,95,170,12280,12088,249,153,348,12201,12214,12194,12153,12023,237,78,11929,98,135,33,101,322,240,12240,89,222,241,12234,12238,12248,272,171,12271,12227,12205,12215,12145,362,12018,203,12091,12134,12248,12117,26,12205,8,250,94,148,109,75,12208,329,12281,57,14,19,265,12188,18,12288,12043,218,70,12260,5,58,26,12167,292,12160,12240,12276,12054,319,59,12270,136,209,22,61,12209,307,12156,12145,12223,236,372,12093,171,12044,12169,24,12281,12016,74,12141,74,348,12190,12037,129,12283,12083,12215,12224,12142,12152,218,12212,12126,12046,41,12172,206,12048,12261,99,12183,324,174,0,12212,12194,12149,159,18,25,12228,78,95,12259,12166,203,11874,12239,25,12047,12078,310,12026,12125,12243,12036,43,304,12108,12248,12117,66,11989,12126,13,131,12220,109,338,12096,12279,225,12258,262,268,193,12282,150,12268,12020,16,71,33,12174,12265,12059,12165,12014,12187,183,12193,12148,0,51,11,11904,11899,12102,334,12209,12204,12197,127,12176,118,12244,58,105,12193,12252,6,426,12230,151,159,12091,12209,102,12256,11879,105,184,12259];

        // signature s2
        // forgefmt: disable-next-line
        uint[512] memory tmp_s2 = [uint(114), 10,165,12030,11883,51,12049,21,182,172,12195,117,272,12134,12116,11967,66,214,483,258,147,397,12105,12163,84,12102,12108,0,35,12205,110,101,11973,85,12265,85,12116,79,256,137,12126,12131,12271,12269,12213,144,110,49,12199,12252,12204,85,12130,303,12284,112,150,12121,193,12135,11843,51,24,444,66,214,73,16,12074,307,12150,209,12282,12208,207,41,47,12248,12241,200,426,12223,12160,160,12277,57,12205,142,12225,8,12281,12239,151,12215,413,41,12088,12115,12285,44,2,113,12206,152,12232,84,12184,31,3,229,165,12132,12146,12283,12187,133,67,12220,12107,11881,12172,115,12284,242,11963,12221,26,0,11872,12143,100,74,157,12278,12059,12169,53,12171,12139,408,12271,12284,109,37,12283,12024,356,119,11979,12287,12143,16,42,12255,45,57,115,12247,12150,12270,267,12281,12144,16,9,12229,82,94,152,12213,133,12188,29,16,11997,12069,12229,168,229,14,12014,95,12100,12254,12038,132,12138,12181,12089,70,17,164,296,12203,12193,175,12005,12168,12132,240,73,135,88,12237,85,157,12233,23,12209,20,23,12128,12219,12194,56,394,166,204,12243,11998,12108,12145,74,12147,122,19,11970,139,271,12282,39,196,92,12205,12081,171,121,12184,147,12070,114,320,260,13,12134,12185,12247,12190,6,12268,12078,117,12066,12253,101,12052,12277,12072,12237,213,12132,12080,12208,12249,12221,12280,165,75,25,12257,125,12269,12057,11967,180,265,254,15,12096,12116,298,12178,76,12279,12285,12257,12282,12247,12054,45,6,44,141,12282,12283,201,240,11992,145,12205,84,196,77,111,12152,167,12052,12110,59,273,12011,12206,17,12258,12278,12200,12235,12222,12210,222,279,94,120,12,12177,77,275,262,12114,12222,12116,12102,12242,216,330,143,12271,11948,12251,12151,103,4,11933,12223,161,118,12203,247,12026,12258,310,12194,12261,84,28,12142,77,12268,12235,12182,12039,11979,12048,12261,12184,11974,12183,11994,42,12083,12179,12144,132,12209,12275,3,66,138,11,12172,12189,45,144,12125,78,129,37,12118,20,12085,247,189,252,12211,28,31,12247,12140,12013,12107,12197,12180,91,12064,243,9,12271,12232,12217,219,142,12280,176,12036,153,12136,57,217,10,338,12287,273,233,27,120,12204,12276,147,12088,12248,12256,11994,12081,12270,12222,12239,12230,190,338,147,158,305,86,12252,60,302,12220,346,141,12023,150,43,12147,153,17,12084,12274,12108,167,12012,146,12211,12226,12256,14,37,12146,129,109,170,12031,153,70,60,9,11895,11989,12106,49,134,12071,21,100,12265,335,7,67,12099,188,52,12221,329,12086,12179,399,10,139,12069,12085,12269,150,12139,12209,12020,253,12285,42,12201,12203,12182,234,12235];

        ZKNOX_falcon_epervier.Signature memory sig;
        // signature s2 inverse ntt
        // forgefmt: disable-next-line
        uint[512] memory tmp_s2_inv_ntt = [uint(2365), 2777,1679,11383,9341,6729,1639,9257,9467,7233,6342,10062,2537,10775,3736,8659,12214,8718,7234,7097,4823,10302,7866,2733,393,1528,7790,4262,8487,219,9781,10088,7526,12166,11178,11150,12249,2716,7134,2944,11391,2363,5314,9273,9684,2640,10935,6560,6462,11817,8030,9705,7018,4740,7758,5227,3619,5186,11495,10179,4700,7835,6469,5179,1135,6696,4931,11873,6120,11936,12118,9255,7506,10443,2112,7253,8071,3758,9722,81,7773,9659,10691,9252,3583,9880,5055,8074,3240,8512,3757,6440,5914,7088,6447,2374,8583,2172,2799,2320,4608,4806,8930,4127,9770,549,6883,10098,8547,10046,7276,5956,3683,2101,2668,5028,3686,5146,8385,3774,9767,8416,1000,11896,4286,4411,10404,6068,11725,7796,5391,7984,7725,10478,637,5170,6123,2194,8301,7929,5611,2278,10244,12240,7155,9798,4609,3215,2609,7951,10312,263,12043,174,7682,4600,9086,6875,4877,4799,5420,934,1156,1112,11296,10616,10530,6571,1353,7348,11563,9280,3818,6482,722,9737,2173,11175,2708,7663,4950,6312,1190,11559,264,3513,10405,6111,7407,6325,9283,6339,393,11414,8646,2109,578,133,7239,5500,12193,2507,9443,9134,2498,4554,9795,1168,11231,3229,4226,5598,3658,5581,4049,5451,4127,3904,10978,716,285,2861,6301,6891,3558,6912,1501,5839,3446,6446,6648,8902,10777,2555,3452,1336,8061,4476,1165,8102,5300,8444,9659,1406,6303,5214,584,5749,9486,5918,2226,8545,6807,122,4035,9019,4022,10212,11219,4146,11860,4903,7031,6267,6438,10194,2798,9125,7680,3626,1570,121,4876,10850,704,447,10428,8584,11852,7318,8145,7049,3641,2135,3904,3878,7882,11420,9116,7037,1348,9102,2948,11339,10032,11198,11241,487,8380,12153,4444,2212,2842,11884,8872,5089,1172,11492,11876,10191,6132,4713,199,10896,8291,7486,8881,9178,6123,11475,6985,6916,4748,5573,7884,2417,10624,2179,1887,3367,2538,5308,860,2302,2333,11194,5159,8623,11130,1335,2069,2719,9901,12,3837,10706,9121,1492,10464,3383,1665,6209,4468,608,4829,11986,4982,4838,1495,2081,10613,7989,11217,4110,9253,7135,7226,7895,11088,12045,6154,7886,2802,4638,9281,8919,4730,6931,8054,5581,559,6292,7022,7027,8780,10751,11095,9318,3322,6708,1785,12223,9497,6990,11684,8569,499,5666,5919,10462,4372,3262,12047,3819,4643,7510,9950,9819,9749,7387,365,1309,1479,6844,3824,5830,1866,3039,11621,6218,9372,11632,4825,6081,2815,4300,3839,8610,4302,2832,2049,6716,1142,6046,2773,5437,8410,8474,8837,6254,7129,6058,208,8265,8175,9144,579,5008,4997,2218,2011,12132,7361,3252,1217,11837,6109,2189,7422,8512,1316,9748,1720,6902,10521,10844,1021,8430,7659,10287,11265,9317,9376,9039,11332,10913,9494,4308,6569,12033,1387,862,10254,11811,2465,11160,11262,8004,5131,3536,8194,10105,8519,2527,529,8436,10152,9841,9690,11041,5910,8473,1475,6938,11592,10428,10864,11548,4973,881,8933,5220];
        for (uint256 i = 0; i < 512; i++) {
            sig.s1[i] = tmp_s1[i];
            sig.s2[i] = tmp_s2[i];
            sig.hint[i] = tmp_s2_inv_ntt[i];
        }
        // message
        bytes memory message = "Practical security on the chain.";
        sig.salt =
            "\x14\x30\x45\xd7\x91\xcc\x85\xef\xf5\xb2\x19\x32\xf2\x38\x61\xbc\xf2\x3a\x52\xb5\xda\x67\xea\xf7\xba\xae\x0f\x5f\xb1\x36\x9d\xb7\x8f\x3a\xc4\x5f\x8c\x4a\xc5\x67";
        address recovered_pk_4;
        recovered_pk_4 = epervier.recover(message, sig, true);
        assertEq(pk_4, recovered_pk_4);
    }
}
