// code generated using pythonref/generate_deprecated_falcon_epervier_test_vectors.py.
pragma solidity ^0.8.25;

import {Test, console} from "forge-std/Test.sol";
import "../../src/ZKNOX_NTT.sol";
import "../../src/deprecated/ZKNOX_falcon_epervier_old.sol";

contract ZKNOX_falcon_epervierTest is Test {
    ZKNOX_falcon_epervier epervier;
    //exemple of stateless initialisation, no external contract provided
    ZKNOX_NTT ntt = new ZKNOX_NTT(address(0), address(0), 12289, 12265);
    // forgefmt: disable-next-line
        uint256[512] psi_rev = [uint256(1), 10810, 7143, 4043, 10984, 722, 5736, 8155, 3542, 8785, 9744, 3621, 10643, 1212, 3195, 5860, 7468, 2639, 9664, 11340, 11726, 9314, 9283, 9545, 5728, 7698, 5023, 5828, 8961, 6512, 7311, 1351, 2319, 11119, 11334, 11499, 9088, 3014, 5086, 10963, 4846, 9542, 9154, 3712, 4805, 8736, 11227, 9995, 3091, 12208, 7969, 11289, 9326, 7393, 9238, 2366, 11112, 8034, 10654, 9521, 12149, 10436, 7678, 11563, 1260, 4388, 4632, 6534, 2426, 334, 1428, 1696, 2013, 9000, 729, 3241, 2881, 3284, 7197, 10200, 8595, 7110, 10530, 8582, 3382, 11934, 9741, 8058, 3637, 3459, 145, 6747, 9558, 8357, 7399, 6378, 9447, 480, 1022, 9, 9821, 339, 5791, 544, 10616, 4278, 6958, 7300, 8112, 8705, 1381, 9764, 11336, 8541, 827, 5767, 2476, 118, 2197, 7222, 3949, 8993, 4452, 2396, 7935, 130, 2837, 6915, 2401, 442, 7188, 11222, 390, 773, 8456, 3778, 354, 4861, 9377, 5698, 5012, 9808, 2859, 11244, 1017, 7404, 1632, 7205, 27, 9223, 8526, 10849, 1537, 242, 4714, 8146, 9611, 3704, 5019, 11744, 1002, 5011, 5088, 8005, 7313, 10682, 8509, 11414, 9852, 3646, 6022, 2987, 9723, 10102, 6250, 9867, 11224, 2143, 11885, 7644, 1168, 5277, 11082, 3248, 493, 8193, 6845, 2381, 7952, 11854, 1378, 1912, 2166, 3915, 12176, 7370, 12129, 3149, 12286, 4437, 3636, 4938, 5291, 2704, 10863, 7635, 1663, 10512, 3364, 1689, 4057, 9018, 9442, 7875, 2174, 4372, 7247, 9984, 4053, 2645, 5195, 9509, 7394, 1484, 9042, 9603, 8311, 9320, 9919, 2865, 5332, 3510, 1630, 10163, 5407, 3186, 11136, 9405, 10040, 8241, 9890, 8889, 7098, 9153, 9289, 671, 3016, 243, 6730, 420, 10111, 1544, 3985, 4905, 3531, 476, 49, 1263, 5915, 1483, 9789, 10800, 10706, 6347, 1512, 350, 10474, 5383, 5369, 10232, 9087, 4493, 9551, 6421, 6554, 2655, 9280, 1693, 174, 723, 10314, 8532, 347, 2925, 8974, 11863, 1858, 4754, 3030, 4115, 2361, 10446, 2908, 218, 3434, 8760, 3963, 576, 6142, 9842, 1954, 10238, 9407, 10484, 3991, 8320, 9522, 156, 2281, 5876, 10258, 5333, 3772, 418, 5908, 11836, 5429, 7515, 7552, 1293, 295, 6099, 5766, 652, 8273, 4077, 8527, 9370, 325, 10885, 11143, 11341, 5990, 1159, 8561, 8240, 3329, 4298, 12121, 2692, 5961, 7183, 10327, 1594, 6167, 9734, 7105, 11089, 1360, 3956, 6170, 5297, 8210, 11231, 922, 441, 1958, 4322, 1112, 2078, 4046, 709, 9139, 1319, 4240, 8719, 6224, 11454, 2459, 683, 3656, 12225, 10723, 5782, 9341, 9786, 9166, 10542, 9235, 6803, 7856, 6370, 3834, 7032, 7048, 9369, 8120, 9162, 6821, 1010, 8807, 787, 5057, 4698, 4780, 8844, 12097, 1321, 4912, 10240, 677, 6415, 6234, 8953, 1323, 9523, 12237, 3174, 1579, 11858, 9784, 5906, 3957, 9450, 151, 10162, 12231, 12048, 3532, 11286, 1956, 7280, 11404, 6281, 3477, 6608, 142, 11184, 9445, 3438, 11314, 4212, 9260, 6695, 4782, 5886, 8076, 504, 2302, 11684, 11868, 8209, 3602, 6068, 8689, 3263, 6077, 7665, 7822, 7500, 6752, 4749, 4449, 6833, 12142, 8500, 6118, 8471, 1190, 9606, 3860, 5445, 7753, 11239, 5079, 9027, 2169, 11767, 7965, 4916, 8214, 5315, 11011, 9945, 1973, 6715, 8775, 11248, 5925, 11271, 654, 3565, 1702, 1987, 6760, 5206, 3199, 12233, 6136, 6427, 6874, 8646, 4948, 6152, 400, 10561, 5339, 5446, 3710, 6093, 468, 8301, 316, 11907, 10256, 8291, 3879, 1922, 10930, 6854, 973, 11035];

    // forgefmt: disable-next-line
        uint256[512] psi_inv_rev = [uint256(1), 1479, 8246, 5146, 4134, 6553, 11567, 1305, 6429, 9094, 11077, 1646, 8668, 2545, 3504, 8747, 10938, 4978, 5777, 3328, 6461, 7266, 4591, 6561, 2744, 3006, 2975, 563, 949, 2625, 9650, 4821, 726, 4611, 1853, 140, 2768, 1635, 4255, 1177, 9923, 3051, 4896, 2963, 1000, 4320, 81, 9198, 2294, 1062, 3553, 7484, 8577, 3135, 2747, 7443, 1326, 7203, 9275, 3201, 790, 955, 1170, 9970, 5374, 9452, 12159, 4354, 9893, 7837, 3296, 8340, 5067, 10092, 12171, 9813, 6522, 11462, 3748, 953, 2525, 10908, 3584, 4177, 4989, 5331, 8011, 1673, 11745, 6498, 11950, 2468, 12280, 11267, 11809, 2842, 5911, 4890, 3932, 2731, 5542, 12144, 8830, 8652, 4231, 2548, 355, 8907, 3707, 1759, 5179, 3694, 2089, 5092, 9005, 9408, 9048, 11560, 3289, 10276, 10593, 10861, 11955, 9863, 5755, 7657, 7901, 11029, 11813, 8758, 7384, 8304, 10745, 2178, 11869, 5559, 12046, 9273, 11618, 3000, 3136, 5191, 3400, 2399, 4048, 2249, 2884, 1153, 9103, 6882, 2126, 10659, 8779, 6957, 9424, 2370, 2969, 3978, 2686, 3247, 10805, 4895, 2780, 7094, 9644, 8236, 2305, 5042, 7917, 10115, 4414, 2847, 3271, 8232, 10600, 8925, 1777, 10626, 4654, 1426, 9585, 6998, 7351, 8653, 7852, 3, 9140, 160, 4919, 113, 8374, 10123, 10377, 10911, 435, 4337, 9908, 5444, 4096, 11796, 9041, 1207, 7012, 11121, 4645, 404, 10146, 1065, 2422, 6039, 2187, 2566, 9302, 6267, 8643, 2437, 875, 3780, 1607, 4976, 4284, 7201, 7278, 11287, 545, 7270, 8585, 2678, 4143, 7575, 12047, 10752, 1440, 3763, 3066, 12262, 5084, 10657, 4885, 11272, 1045, 9430, 2481, 7277, 6591, 2912, 7428, 11935, 8511, 3833, 11516, 11899, 1067, 5101, 11847, 9888, 1254, 11316, 5435, 1359, 10367, 8410, 3998, 2033, 382, 11973, 3988, 11821, 6196, 8579, 6843, 6950, 1728, 11889, 6137, 7341, 3643, 5415, 5862, 6153, 56, 9090, 7083, 5529, 10302, 10587, 8724, 11635, 1018, 6364, 1041, 3514, 5574, 10316, 2344, 1278, 6974, 4075, 7373, 4324, 522, 10120, 3262, 7210, 1050, 4536, 6844, 8429, 2683, 11099, 3818, 6171, 3789, 147, 5456, 7840, 7540, 5537, 4789, 4467, 4624, 6212, 9026, 3600, 6221, 8687, 4080, 421, 605, 9987, 11785, 4213, 6403, 7507, 5594, 3029, 8077, 975, 8851, 2844, 1105, 12147, 5681, 8812, 6008, 885, 5009, 10333, 1003, 8757, 241, 58, 2127, 12138, 2839, 8332, 6383, 2505, 431, 10710, 9115, 52, 2766, 10966, 3336, 6055, 5874, 11612, 2049, 7377, 10968, 192, 3445, 7509, 7591, 7232, 11502, 3482, 11279, 5468, 3127, 4169, 2920, 5241, 5257, 8455, 5919, 4433, 5486, 3054, 1747, 3123, 2503, 2948, 6507, 1566, 64, 8633, 11606, 9830, 835, 6065, 3570, 8049, 10970, 3150, 11580, 8243, 10211, 11177, 7967, 10331, 11848, 11367, 1058, 4079, 6992, 6119, 8333, 10929, 1200, 5184, 2555, 6122, 10695, 1962, 5106, 6328, 9597, 168, 7991, 8960, 4049, 3728, 11130, 6299, 948, 1146, 1404, 11964, 2919, 3762, 8212, 4016, 11637, 6523, 6190, 11994, 10996, 4737, 4774, 6860, 453, 6381, 11871, 8517, 6956, 2031, 6413, 10008, 12133, 2767, 3969, 8298, 1805, 2882, 2051, 10335, 2447, 6147, 11713, 8326, 3529, 8855, 12071, 9381, 1843, 9928, 8174, 9259, 7535, 10431, 426, 3315, 9364, 11942, 3757, 1975, 11566, 12115, 10596, 3009, 9634, 5735, 5868, 2738, 7796, 3202, 2057, 6920, 6906, 1815, 11939, 10777, 5942, 1583, 1489, 2500, 10806, 6374, 11026, 12240];

    //stateful initialisation
    function setUp() public {
        bytes memory bytecode_psirev = abi.encodePacked(psi_rev);

        address a_psirev; //address of the precomputations bytecode contract
        a_psirev = address(uint160(0xcaca)); //here it is etched, use create in the future
        vm.etch(a_psirev, bytecode_psirev); //pushing psirev bytecode into contract todo : replace with create

        bytes memory bytecode_psiInvrev = abi.encodePacked(psi_inv_rev);

        address a_psiInvrev; //address of the precomputations bytecode contract
        a_psiInvrev = address(uint160(0xa5a5)); //here it is etched, use create in the future
        vm.etch(a_psiInvrev, bytecode_psiInvrev); //pushing psirev bytecode into contract todo : replace with create

        ntt.update(a_psirev, a_psiInvrev, 12289, 12265); //update ntt with outer contract

        epervier = new ZKNOX_falcon_epervier(ntt);
    }

    function testVector0() public view {
        // public key
        // forgefmt: disable-next-line
        address pk_0 = address(728199263750570446964354330903202655824594974439);

        // signature s1
        // forgefmt: disable-next-line
        uint[512] memory tmp_s1 = [uint(12124), 12213,12183,51,97,12273,7,98,12204,346,12199,188,75,236,12196,84,12219,12172,158,11995,138,12164,10,0,55,168,87,183,11,134,12268,12233,12059,12183,302,142,19,12048,273,169,21,104,12268,62,155,12231,118,12259,12172,12216,253,27,12273,170,285,184,140,11886,133,28,12198,12042,12222,227,161,340,12247,139,12173,46,12266,144,23,12263,12074,351,12231,12242,70,12216,12144,12183,192,12144,12130,12061,196,159,12193,12266,12242,12281,12167,12179,12287,12266,12233,269,17,12082,153,154,138,12205,271,87,12192,12105,60,12194,12064,12223,237,167,46,120,45,12241,54,200,12204,12129,114,12240,215,117,159,12245,12256,12240,12107,12185,12287,230,12254,11991,12164,73,14,12043,12064,129,12062,156,25,17,12064,74,74,12,12207,12041,12174,12273,91,242,290,12137,239,139,14,12139,12218,12178,12004,121,12090,172,12203,12167,175,12232,38,62,12196,12141,202,12208,60,310,12130,38,89,68,12157,12203,326,12216,11958,12127,12027,12115,126,139,161,217,24,229,52,29,12257,11807,12283,87,112,12251,132,12011,49,12152,63,44,12233,12108,34,119,104,53,12266,353,44,12211,12193,36,118,72,87,12248,12263,12250,12133,11994,12218,12099,12078,12065,5,401,12214,84,385,12038,12281,12120,243,152,37,196,218,12181,12253,12127,4,121,12126,12089,12234,91,116,92,281,12281,18,96,12210,23,12188,12156,12235,12200,11996,12281,79,219,12171,153,12266,174,306,314,59,205,12187,100,215,12029,265,12128,12226,12234,12006,12209,11937,110,12079,168,68,109,56,12140,12243,12152,12123,12081,12263,305,12039,12178,12230,225,12271,12148,12062,12153,12160,271,213,71,12097,143,12210,12264,12276,131,107,16,12116,26,222,11962,12123,11982,12288,234,274,6,210,88,12,12176,102,12251,12012,12171,11888,171,137,12207,64,385,12009,235,450,12158,12044,12258,303,107,12205,12266,48,12242,20,12214,12172,120,11857,202,21,12287,146,12167,221,12155,12138,12241,215,12225,221,12136,12028,103,12154,103,11995,12265,405,12180,21,12161,12222,12254,11927,11993,204,86,188,11987,170,42,12237,173,69,12072,12230,91,12210,139,12271,11995,12210,12287,12130,43,12255,12187,12239,217,130,78,12287,12274,12242,12264,12227,165,12039,12172,253,42,6,406,12268,12179,12243,12124,149,46,118,133,12288,12108,12257,66,88,44,183,442,59,12247,12069,12222,12159,318,12088,29,12198,12053,12187,109,303,140,12102,12261,34,12088,12148,176,57,179,152,51,12108,200,12260,108,12237,12253,12218,278,11926,12180,12041,248,11998,36,408,12124,178,75,206,12040,126,12268,12090,12218,172,3,130,12260,12207,186,12234,513,12247,146,11945,12275,12258,12152,107,58];

        // signature s2
        // forgefmt: disable-next-line
        uint[512] memory tmp_s2 = [uint(75), 55,12190,110,19,20,12125,12042,12277,80,10,12211,12083,90,12140,12264,11941,12210,12262,12279,158,11942,12008,10,12253,12108,12252,12143,90,12207,12232,20,51,119,12037,11976,43,12136,166,20,12233,12285,12241,36,12235,323,55,12108,12091,11996,12212,12187,12285,12059,37,12110,59,12132,191,40,54,12252,138,12263,12033,12170,12151,75,12279,12222,12140,183,168,66,206,12229,12094,11998,12272,228,175,12090,12255,40,40,42,12130,44,340,12287,12069,64,92,175,12246,12105,12092,12225,65,12241,29,330,12283,12076,12185,168,306,12227,12213,197,12252,12240,119,83,213,12273,12068,12257,139,12239,12236,53,42,12127,12257,12177,12138,85,16,12284,12267,82,12268,12163,12201,12180,12142,12202,12000,73,12247,236,12189,12212,104,176,12230,94,12075,109,227,12062,12249,12252,204,120,34,12162,165,12169,129,12192,276,189,179,12119,216,12257,169,214,150,190,12229,12216,164,241,12200,12178,12218,12225,12270,114,123,193,12088,12114,12251,12245,12088,12168,35,12288,103,12184,153,160,12186,12137,12011,122,12048,41,67,12090,33,25,12214,12129,12052,12209,75,12259,160,5,12194,264,168,12145,111,12156,375,12174,187,12275,12125,142,12285,116,12242,12246,163,12173,18,12211,12207,12192,30,137,12192,15,12068,12072,104,12024,20,87,12037,109,157,12142,12198,237,12142,12261,75,96,12224,73,12098,11980,141,12242,12150,12157,138,253,357,12213,12183,23,112,12130,91,12039,11898,64,284,25,174,9,51,215,34,177,314,12047,12282,12250,14,12093,12241,12008,95,7,12180,12142,59,69,128,224,178,23,94,12266,85,62,12231,121,266,50,166,12243,12088,96,12256,12270,13,14,11891,12216,12106,22,145,12097,129,12067,43,12269,22,109,146,142,254,12096,84,48,85,179,5,81,12201,155,193,12235,105,221,78,12180,172,143,12097,12046,12144,12286,285,12012,12151,45,69,12153,139,12062,90,219,138,99,12175,12170,12164,12207,125,262,12116,12222,12009,12191,53,84,12165,12138,126,12132,229,12281,12068,12,198,12238,12175,24,62,160,75,174,97,12140,202,45,75,12143,12053,223,12268,17,221,12091,12266,28,127,273,12119,232,12256,131,34,38,12097,69,12029,343,12001,63,141,6,12215,97,12264,226,188,12112,12275,12232,12276,94,12196,12188,12168,12199,52,39,69,272,12226,12191,12268,9,12268,350,12134,222,12207,11898,261,171,12163,191,12277,12256,155,12169,18,12097,44,539,126,24,12215,12186,100,12116,176,50,12202,228,5,12252,12231,156,109,456,11991,12212,59,12276,12034,22,5,437,12008,12086,12141,12229,12270,88,87,12279,12201,11991,12178,29,39,53,12221,70,12069,12115,66,8,12192,107,137,49];

        ZKNOX_falcon_epervier.Signature memory sig;
        // signature s2 inverse ntt
        // forgefmt: disable-next-line
        uint[512] memory tmp_s2_inv_ntt = [uint(2230), 12222,7665,6585,11005,5728,817,6805,12053,2828,10949,280,3962,177,6658,3666,2731,9973,8071,11196,1375,7448,10847,2688,9391,1822,6530,8187,4454,10698,12287,5311,8520,2850,11559,11726,8961,2964,6395,10821,3666,10135,11962,6539,7181,176,7428,1756,11695,9717,6932,1016,8100,9361,157,148,6014,1674,1293,8339,5981,9326,4805,12180,10302,11116,6661,4647,8858,3762,8807,3976,7128,2447,7458,7799,2734,10302,8385,449,5825,622,133,5158,4511,5619,786,11029,7327,12073,6876,6839,7112,1249,11926,10569,11172,8872,9541,7157,9776,4693,1001,1611,4761,10455,2508,10745,4165,828,8961,10917,1317,1979,12078,3389,10175,623,12168,3375,4794,8810,9950,4593,1672,10567,6195,12148,9982,2006,9549,6512,2609,8341,4464,7417,1796,6376,3541,5883,8240,1405,4124,5377,10317,8849,10160,1863,11032,9163,8773,2826,10685,3856,4169,1665,7205,6554,3709,5340,4372,9737,394,8925,4022,8341,9094,4710,2552,10684,11737,6628,2649,3910,6039,9231,3558,8624,5690,10939,5698,8238,3596,9218,7817,732,9473,3863,9920,2706,4116,6650,6283,729,34,12247,9737,7352,78,7651,3702,4961,9074,5332,3626,2779,8264,7358,3511,6206,11868,10701,8994,2832,9445,5265,4774,4512,891,7864,4534,7169,1992,1214,4866,6612,1707,1965,1523,9389,917,11759,12025,9386,538,1871,12153,4025,1000,270,2144,1446,497,1930,5070,3170,7790,4780,11158,11117,3194,7481,7960,5745,4332,5142,11094,9767,12225,3146,2231,1971,7191,4,1419,4989,8431,9476,12288,12039,7329,2911,2183,4992,330,7029,9131,7707,1883,3679,10564,11605,9713,8077,10164,3862,6979,3857,12269,10841,4392,6089,3462,8950,1177,1892,8691,4436,1887,11038,21,5107,4466,6379,5289,10824,7557,4173,4913,9733,3040,8335,1546,3186,4558,11125,9864,2841,4203,797,607,5443,9296,12072,5469,10597,4207,7030,8615,2559,9530,10773,4303,4990,10200,1293,10309,8288,7330,5178,3120,7980,5567,11055,10059,4233,1596,7648,10663,11564,8452,10013,11918,9634,1124,11186,12075,4784,11170,9660,7216,3746,3795,12242,11684,11277,256,10247,9193,5519,10034,4458,8076,572,4561,4807,8023,5269,7270,169,8399,7084,6164,6026,4750,11282,9439,7875,7760,1006,5818,8079,3030,6757,10076,9753,5370,10450,8526,3577,8912,8245,10867,11357,5849,9846,4658,10023,11582,5740,3272,4890,28,10957,10214,2878,3112,11483,3753,12141,11010,510,10154,10117,4224,1359,2829,3214,12201,3594,10864,2413,2499,6056,9507,5575,3619,1474,10689,7854,10327,9471,11982,110,5624,2299,343,8763,11026,6924,905,4707,7733,7417,7538,7822,150,4457,1973,8264,2941,6517,1544,7412,1625,6564,626,9013,4068,9483,7762,4471,2272,2466,3884,10343,29,10973,9980,10770,2115,4728,8103,5249,6134,10245,2378,11398,9429,2251,8681,3603,9621,4557,1989,5081,2787,7509,2623,7267,2461,12016,4966,6408,10885,1009,3787,772,11909,5367,1142,6227];
        for (uint256 i = 0; i < 512; i++) {
            sig.s1[i] = tmp_s1[i];
            sig.s2[i] = tmp_s2[i];
            sig.hint[i] = tmp_s2_inv_ntt[i];
        }
        // message
        bytes memory message = "My name is Renaud from ZKNOX!!!!";
        sig.salt =
            "\xab\x0b\xae\x31\x63\x39\x89\x43\x04\xe3\x58\x77\xb0\xc2\x8a\x9b\x1f\xd1\x66\xc7\x96\xb9\xcc\x25\x8a\x06\x4a\x8f\x57\xe2\x7f\x2a\x5b\x8d\x54\x8a\x72\x8c\x94\x44";
        address recovered_pk_0;
        recovered_pk_0 = epervier.recover(message, sig, false);
        assertEq(pk_0, recovered_pk_0);
    }

    function testVector1() public view {
        // public key
        // forgefmt: disable-next-line
        address pk_1 = address(728199263750570446964354330903202655824594974439);

        // signature s1
        // forgefmt: disable-next-line
        uint[512] memory tmp_s1 = [uint(12262), 11,22,12106,12199,54,201,81,12026,12252,12284,17,47,212,12076,52,252,238,32,34,12109,101,12028,305,7,7,12108,51,51,142,80,134,121,12171,12278,11883,12130,30,192,373,12090,54,110,127,209,79,12085,12204,12229,36,12092,134,12050,312,12187,62,79,291,12085,12176,65,12286,62,22,12125,12242,68,87,12013,12217,12062,191,353,37,12068,12186,12134,178,12188,12052,12227,12190,12201,54,12127,152,139,12108,31,0,154,145,87,12235,12192,249,12098,12041,12192,12148,12075,12201,12240,12046,12264,12222,12265,12082,11962,12100,61,200,160,91,167,11988,12253,12207,12124,16,91,12171,11786,180,11979,12269,12149,11972,208,33,76,12080,411,61,12262,12172,12241,12212,12028,12286,12222,16,208,50,251,95,12117,6,12106,23,191,110,286,12173,186,280,185,148,12156,141,219,12148,12238,12069,12260,88,18,148,25,59,5,12230,12086,12223,12175,208,86,7,12136,11993,363,45,12253,12271,12234,12162,12110,75,12168,12101,31,12275,12245,194,376,11990,185,4,12031,40,17,12078,12278,158,62,12265,12287,11930,19,42,12250,4,282,43,12173,12124,12085,81,319,123,220,100,139,12215,12279,66,12218,12224,12274,179,11977,199,12165,103,27,162,24,12175,1,231,271,12121,12244,12195,12126,12211,12192,11998,55,103,12282,300,96,149,12084,12198,10,12188,11967,109,12054,12260,41,190,11925,12158,12091,12261,12178,107,85,179,12208,12096,51,12215,12199,12092,145,12173,12236,12257,12093,12253,12139,288,240,12275,49,12147,178,12082,12025,12136,252,12239,16,12207,100,86,12156,12266,12228,1,52,139,12089,65,18,148,12041,12287,12045,12258,12205,24,133,12271,125,160,12097,12197,12234,84,12140,12040,12225,12209,11992,138,12242,158,167,12254,420,33,12121,181,35,12050,227,12062,76,12164,12037,103,12131,46,12238,97,111,24,12082,9,172,12170,28,12258,11,240,79,215,12238,12167,11981,12019,54,32,12269,12220,12163,20,113,91,12274,12252,12265,12088,12184,12276,12024,12008,12221,218,112,57,12279,13,247,151,118,12250,12098,400,123,203,12176,11742,62,112,12114,89,12288,7,39,152,12251,12264,12239,383,12235,12193,12286,12076,228,212,12110,12270,12227,176,12130,12193,12218,138,12224,74,12237,124,242,12267,11770,190,30,178,43,263,184,59,12086,116,187,12157,12176,24,81,102,40,12129,106,45,264,12160,96,12173,12272,266,275,12205,12281,104,12244,12150,12108,12064,4,89,111,12214,187,299,92,11953,12252,21,33,178,78,12280,446,12160,333,12142,173,39,12136,12229,128,44,12053,2,12129,12043,71,170,123,136,337,12040,12103,98,198,208,13,90,51,193,12263,128,11919,12116,35,12128];

        // signature s2
        // forgefmt: disable-next-line
        uint[512] memory tmp_s2 = [uint(208), 12198,12267,12179,12189,12226,11975,12186,76,12106,12255,12140,25,12148,151,112,42,12196,12255,12144,66,297,121,12091,12177,12023,12252,128,12193,215,11981,12258,12127,166,12257,10,325,19,12148,12163,301,12100,12242,11996,12096,88,181,12227,147,12160,65,396,12209,12079,12230,12278,248,12072,177,107,12206,12174,78,12167,5,261,12182,158,46,12142,252,12030,273,12003,12258,16,12097,5,7,12138,12253,12232,12189,11928,12285,12116,73,12098,12108,58,274,46,12199,200,49,12210,147,147,208,19,12264,12054,221,9,12169,12210,19,37,129,36,12260,65,63,12151,104,12000,12191,281,12242,93,221,12287,216,12254,173,12240,12211,124,49,12212,57,163,266,184,53,12264,59,12117,65,12257,64,12168,12065,55,251,12153,11987,12283,12190,12213,12090,12137,12156,12170,11917,157,12094,12091,178,12171,9,114,9,12098,12283,12182,288,50,12100,12233,80,12232,12050,98,127,168,11984,12247,12282,75,12170,12064,12257,8,12193,12197,87,22,11819,127,12075,90,64,12108,12177,12084,11961,11,114,35,48,103,12266,238,202,19,11993,12262,185,12127,86,12005,86,12269,12207,336,223,12227,30,195,31,12047,290,12102,137,194,134,34,12229,12207,12004,107,12069,465,131,178,12055,12166,106,12181,12277,12210,12239,4,12255,12251,350,11873,66,12236,29,242,12167,12144,205,0,12117,12221,12021,11752,119,12094,118,12218,12105,12097,140,12167,12125,226,12247,124,12128,12245,157,11941,78,12155,130,235,69,168,164,12159,41,12225,86,299,12256,12285,12095,12284,11718,12045,166,12220,425,135,12261,12200,11961,40,12259,308,88,12121,113,12136,196,245,93,12231,12242,12255,12129,12153,12063,12154,9,210,61,59,12242,12225,12212,11978,27,12247,12262,8,244,183,12225,188,118,12229,12031,15,255,12256,194,11986,12101,245,100,12177,12267,14,209,12265,11928,144,14,148,12287,0,267,90,12106,12223,12062,20,116,110,12265,12269,180,252,20,12206,264,12121,223,58,12166,12165,91,12099,276,183,241,24,12044,12028,12113,131,116,12215,12141,12184,13,12116,11930,12256,12238,146,20,12146,12100,77,145,164,12247,12247,36,174,15,128,12190,197,95,241,12158,12131,266,102,12067,345,245,12080,12142,47,12137,12075,129,12195,1,12034,206,12097,98,12157,12214,12277,12200,12288,12100,12271,12151,47,154,12144,12252,12083,191,11961,4,51,26,12147,5,12109,37,12190,327,197,12194,12205,41,162,12078,12243,12278,12229,113,12232,71,12130,12229,106,12152,12185,12126,12150,139,101,12201,12279,22,103,12155,47,12216,12269,60,236,18,134,12110,43,33,12259,12194,90,92,62,12022,12116,79,11808,12182,251,309,12172,11955,301,12226,12142,12215,63,63,12253];

        ZKNOX_falcon_epervier.Signature memory sig;
        // signature s2 inverse ntt
        // forgefmt: disable-next-line
        uint[512] memory tmp_s2_inv_ntt = [uint(4337), 3346,7356,3928,4373,2806,7789,41,5006,849,5569,9531,8488,8819,3171,4403,9928,4562,4180,8125,1713,9261,4572,1117,6733,878,926,5938,2463,772,11590,369,4487,7288,400,2582,10129,9735,10310,9238,4220,5047,12120,3029,10854,11369,2665,11539,1239,5538,4699,1839,11446,8704,7639,9858,2319,3402,5355,8956,5101,7826,989,5079,1460,626,7940,11105,10251,2636,8769,4472,9311,3441,2412,8403,7165,8313,1883,6835,5293,7360,11637,317,8418,4674,5772,10046,10789,11286,6492,12185,9446,6971,9402,3597,1362,5432,7952,4726,3614,4944,2527,4087,6644,3215,7834,6594,7288,3323,198,4443,4560,5833,4125,21,4092,2624,7872,2782,1828,7117,3579,12219,9322,5976,1358,8885,5293,10341,8462,11318,787,3325,463,575,4565,9140,1498,4113,9961,5134,9306,3156,8030,2321,6732,11579,5357,5262,1445,5936,11986,1263,8560,8742,5769,485,5037,4462,8699,329,9959,5789,7060,8532,7912,7050,3141,7273,5841,6919,5080,11135,6656,11156,11867,2057,6171,9431,12003,9649,9475,11188,2935,2743,310,11966,211,5010,1978,2826,11837,3205,8047,7204,4498,4340,1555,9347,780,7277,12264,7257,5999,12011,1518,7317,8529,5381,601,9299,2978,3962,5637,8660,4627,7362,9679,7432,8232,4818,5731,7572,2567,1740,8533,9015,4728,11294,10333,9439,3432,3883,4013,3038,1487,1558,7819,357,2961,3552,3827,8689,3526,11701,638,580,1465,5104,7170,1187,615,4711,6646,10766,497,2420,11675,8941,11892,690,6813,6116,4511,6155,5808,11203,8587,10834,11303,8685,8052,1157,4324,11683,12214,9908,8945,8457,6607,2276,1316,6220,8573,7334,1419,6635,1355,1098,2690,9308,9531,4470,11595,10883,10357,3880,3234,4093,8751,7038,646,7093,7842,9336,11317,3585,8532,6639,10904,4893,10014,10553,8002,11247,1469,6072,5663,9709,6507,6611,10921,2886,5701,3955,5305,10416,3672,5847,5402,10073,6239,4365,9266,4809,1240,11897,4346,3301,8160,8375,5556,11536,3663,206,270,7193,7188,6050,9741,2205,2961,7967,198,4770,3899,304,4285,6662,7738,6337,8544,9104,2518,3550,10989,3478,202,4057,11145,10115,6205,1098,3650,10563,11882,8595,9360,10849,10940,7878,10803,3941,11763,4337,1923,10222,2973,2587,10389,4476,5774,7757,9717,2666,1390,4016,8667,10023,5921,5331,4706,932,2528,3426,9797,945,9619,2102,271,2044,10192,6928,2933,2536,6203,5759,6409,11507,10336,11245,3469,9554,11189,7223,8173,7222,253,4358,4191,7406,6158,7639,1035,9507,8267,6681,3123,895,9007,4259,10362,3743,3615,8103,8844,1970,1676,3174,6468,958,1054,6958,5114,1658,5828,3404,9788,126,4141,10336,2303,5660,7721,11811,9295,695,5743,1134,2467,3442,6692,6140,4189,5905,5585,10521,2322,11877,11640,3138,10292,4829,5045,11558,11502,980,4745,5935,8595,6479,2804,5190,2676,8632,4555,4139,1751,2217,10130,6633,8970,2467,5324,3638,2507,5374,9385,4535,8291,775];
        for (uint256 i = 0; i < 512; i++) {
            sig.s1[i] = tmp_s1[i];
            sig.s2[i] = tmp_s2[i];
            sig.hint[i] = tmp_s2_inv_ntt[i];
        }
        // message
        bytes memory message = "My name is Simon also from ZKNOX";
        sig.salt =
            "\x91\x89\x90\xff\x93\xe0\x65\x6b\x5f\x75\xb0\x87\x29\xc6\x0e\x6a\x9d\x73\x52\xb9\xef\xd2\xe3\x3e\x3d\x1b\xa6\xe6\xd8\x9e\xdf\xa6\x71\x26\x6e\xce\x6b\xe7\xbb\x5a";
        address recovered_pk_1;
        recovered_pk_1 = epervier.recover(message, sig, false);
        assertEq(pk_1, recovered_pk_1);
    }

    function testVector2() public view {
        // public key
        // forgefmt: disable-next-line
        address pk_2 = address(728199263750570446964354330903202655824594974439);

        // signature s1
        // forgefmt: disable-next-line
        uint[512] memory tmp_s1 = [uint(21), 17,142,117,12188,12118,12260,114,12240,196,12085,198,12048,12265,38,22,173,12083,103,25,162,154,123,124,12275,46,256,51,11923,12173,12038,12101,12127,12197,12151,12059,12210,21,12166,12176,12126,12184,126,12224,67,12068,12233,83,12165,352,12215,12042,104,12256,111,201,236,5,27,121,12133,12235,27,12221,186,12156,215,448,12233,12057,12153,12068,184,176,47,32,84,12001,37,83,64,206,46,120,27,26,227,12018,0,47,47,12265,48,17,70,12200,12194,12177,12174,144,162,122,98,257,352,217,12128,12248,12240,12099,12147,226,48,109,12104,270,12118,40,119,12095,12206,12109,463,12005,88,39,65,108,96,148,11987,12081,216,12050,12116,12115,70,12246,76,267,10,12246,111,12255,12269,114,77,11973,12216,94,16,12096,12214,12149,12182,12162,12242,175,12238,12006,12191,11974,12043,12125,12080,5,12124,12216,107,68,12245,30,7,64,33,11,53,12182,270,41,46,12231,12082,103,272,117,297,12238,87,57,96,12262,12255,12202,11918,12267,167,102,135,140,12093,11949,12198,12284,12137,12182,156,11892,12261,154,12191,12092,112,89,12184,63,255,12164,215,75,331,12149,12189,12197,12216,13,11964,12070,12006,12260,12269,1,12053,12142,12171,45,12219,87,55,11938,28,12190,12178,126,8,94,12057,12225,50,57,12230,8,78,12028,14,86,120,12157,237,12040,12229,12151,12088,425,12080,167,12242,54,11960,12107,12151,12168,12101,12263,90,12186,12254,12125,117,12161,12268,12069,182,12282,12103,12087,15,12101,23,12100,66,11865,12228,12058,12186,12209,12272,12017,11935,11948,136,11946,99,170,12132,12255,495,204,107,67,203,12182,12093,11970,12246,6,229,44,114,12231,210,12214,102,196,188,242,25,82,81,12270,83,12248,14,12266,12249,12242,166,64,12077,12253,12205,12192,11903,20,130,109,12214,12216,150,289,12239,415,165,12145,12226,11824,12213,27,12254,24,127,91,12241,249,12063,125,12130,129,67,133,109,12050,135,12101,12284,12043,88,131,122,161,12018,94,12180,12171,11961,12273,105,262,62,56,11982,205,12224,182,12064,12265,115,68,56,263,195,59,12160,65,181,53,70,49,157,12223,38,9,12199,186,122,12101,12073,12157,229,20,12281,4,12176,68,374,12254,12273,163,12012,12169,12,213,12272,12245,11971,12179,4,21,110,12207,12136,12174,116,12210,271,148,83,12042,12274,12236,233,23,211,94,174,355,60,181,85,8,38,197,121,12093,31,30,12053,220,12035,223,12203,12162,27,12193,167,12239,291,94,12245,197,41,12143,12265,108,12277,11906,12285,12244,12229,144,12184,12134,81,287,12288,12157,12284,161,43,12190,12278,11928,96,12259,12273,12085,114,12141,12187,12123,12101,12116];

        // signature s2
        // forgefmt: disable-next-line
        uint[512] memory tmp_s2 = [uint(12203), 71,12221,12236,40,243,27,57,232,41,17,12,12171,139,253,27,90,94,12200,7,12230,224,258,0,12283,73,12148,12278,11994,12177,5,11,76,130,12180,12214,51,141,327,224,80,12230,12196,12092,12124,126,12222,136,12138,30,13,11962,11947,12233,31,103,146,244,219,12117,11991,146,96,381,18,282,186,78,30,12058,320,191,24,115,209,301,12220,212,92,148,12135,160,265,12225,11937,25,153,12176,11976,12280,69,75,254,12240,113,77,120,12166,12255,12132,149,12169,228,12259,13,12068,12230,12263,49,147,12077,11985,11970,12275,12168,49,12129,152,12218,421,12239,216,12267,12237,12251,121,116,12182,28,12064,12174,151,12224,12140,243,12209,12253,12139,11803,252,12212,12280,12250,12140,12077,12069,12285,62,12122,12164,12093,11989,342,12109,12280,37,267,24,301,12122,12168,165,74,130,11897,365,231,12008,34,28,229,286,12218,221,74,12156,2,50,12278,12254,12268,12237,12237,86,12177,12155,12224,12174,12255,12251,304,12231,179,12219,12270,58,102,12288,60,132,17,12124,12283,12128,12177,12027,128,12219,12226,249,304,38,12004,273,76,159,34,12208,251,12168,12081,12176,12267,11969,12198,223,12090,65,200,12174,217,97,169,12273,39,386,11949,12,12155,25,84,12229,53,36,12243,12134,12097,139,52,70,12188,12107,12233,42,80,65,11837,12128,60,116,58,12216,12118,11978,100,211,12286,81,12133,114,24,252,12170,64,12276,33,12092,0,12239,12219,71,149,12136,11991,12199,67,129,11810,12172,103,12061,124,124,137,119,12161,12246,12201,272,12110,55,232,11974,147,440,12067,12118,335,12221,12286,12110,12212,12097,12046,35,312,12161,12261,259,12262,155,12211,12279,12187,12244,12259,12223,242,12194,124,144,12095,110,147,11983,295,8,162,11944,12210,157,12193,54,109,159,170,12083,12174,21,221,30,35,118,27,12154,12264,61,12207,12200,190,95,12075,50,12148,600,12122,12276,12214,91,140,199,12271,12134,12098,12248,11872,12285,12138,11881,296,12250,462,90,12161,11954,118,199,12149,289,237,22,12243,12249,12284,12162,1,70,11999,12262,45,12052,87,132,167,148,185,4,12016,73,12112,72,160,50,144,101,12023,145,11996,12274,101,165,12249,12144,82,152,218,224,25,12081,12210,12205,12158,12166,12182,19,37,25,12285,251,33,12074,217,5,12219,120,12101,43,12252,12210,12143,12284,12262,300,12260,150,83,212,241,122,12225,32,44,12223,215,12146,12232,12038,12195,12282,12185,12263,30,24,12228,210,151,8,12265,18,496,12125,232,12227,11,0,37,15,6,12158,11983,38,12185,12040,12063,12227,12055,12252,12259,12160,188,204,12233,85,12267,124,12234,12006,258,12201,71,12224,12266];

        ZKNOX_falcon_epervier.Signature memory sig;
        // signature s2 inverse ntt
        // forgefmt: disable-next-line
        uint[512] memory tmp_s2_inv_ntt = [uint(4401), 2536,2507,172,2326,6187,2488,1633,8539,9636,11166,1900,4205,10389,6169,8893,1442,7719,2395,118,2749,1799,1299,11648,10542,1512,6931,4716,9341,9209,3189,8961,11630,3751,11603,8908,11792,11486,4331,1418,322,1892,5891,1118,227,1392,9224,2193,7133,892,568,10697,6240,11154,11298,5911,2477,3075,6452,6591,9362,10808,6554,1652,205,9268,3264,113,4069,11896,11031,8775,7804,11692,9433,6014,3886,5968,9133,4643,8192,5305,6826,7788,4674,4670,5523,9734,8988,4353,2785,9792,11871,8556,9599,12108,7704,8784,2825,3340,8052,5876,6568,7934,3324,11411,2065,7879,5551,9550,3417,9485,469,10646,407,2345,1567,1051,8190,8783,1283,3824,868,9837,8944,11156,122,3940,1543,7157,11460,8727,5920,64,7950,6500,11350,7577,969,7314,7594,8546,11308,3036,6250,6738,5938,6813,1620,5490,4538,10419,4523,9589,4618,11894,4115,6398,1135,9195,273,9203,5659,689,11571,11550,12218,7773,5684,2760,3609,9368,6357,8339,10363,5884,11221,2937,2652,8376,848,4014,8240,914,1127,7340,4315,4250,821,7512,7046,5197,7638,3290,4087,4888,4162,5554,4742,6069,4724,12138,1436,169,3283,6627,1035,1186,11966,1474,5434,10513,3655,9561,6920,4112,11867,8146,1585,37,4542,8409,564,5699,6323,7238,3552,10140,3611,10174,1928,11637,9828,8446,6397,10350,8534,9861,9846,7519,11952,6772,323,5092,8418,7462,7962,3702,2918,1412,9989,11270,2314,8918,4589,3013,10115,9825,8056,12189,2222,8813,4986,469,5266,2344,11635,234,8941,10394,8329,6547,10632,9959,1565,7968,795,10472,1034,7344,7423,6668,5616,3465,880,7939,1505,6230,4732,12214,5555,10146,11329,8162,12073,10115,7667,12038,6237,9503,7434,7589,6408,6398,357,8646,1642,8191,10512,5557,479,2276,1646,8830,4320,6023,845,3278,11156,6770,6729,7368,6716,6791,1062,10410,4154,3859,4820,9862,4441,10446,763,4763,427,11786,4159,7546,10317,10027,5810,7158,7792,6372,8136,9245,6429,5082,12216,12090,9360,4531,552,11651,722,4731,3234,6714,4253,3778,6982,7403,3209,2202,8207,6281,7568,6649,4141,7746,432,545,4581,10142,1456,8110,2404,1730,1405,3262,8256,7902,3318,8694,2869,8065,10746,8708,3777,11514,7079,2063,7201,10776,3109,10134,5830,11425,90,3890,5578,10783,1044,7149,1156,1283,10558,10306,731,264,11372,2698,285,4250,4304,11816,8956,6914,8875,5565,4152,7248,2392,11258,9333,2,10503,10964,11609,7972,4032,8246,10791,9134,10782,8135,2839,11911,10807,10466,3098,8690,395,11871,9515,12075,5062,1166,2485,5368,1775,2122,6147,9366,9422,282,9717,2754,6034,1515,7401,2238,5705,11927,9966,2611,2131,7553,10799,1713,2898,4436,9268,134,5161,5402,549,669,2767,4763,7784,5460,1240,3726,24,4174,6436,3414,1006,6980,3529,3120,6399,10988,7316,6763,10978,4934,3715,3949,1690,8780,3806,491,8128,6611,7231,5295,4927,3316,640,11159];
        for (uint256 i = 0; i < 512; i++) {
            sig.s1[i] = tmp_s1[i];
            sig.s2[i] = tmp_s2[i];
            sig.hint[i] = tmp_s2_inv_ntt[i];
        }
        // message
        bytes memory message = "My name is Nicolas from ZKNOXtoo";
        sig.salt =
            "\x13\x57\x9b\x4e\xf5\xf6\xb6\x42\x65\x63\xd7\x19\x5b\x8c\x5b\x84\x73\x6b\x14\x26\x61\x60\x34\x2c\x40\x93\xf8\xab\xea\x48\x37\x1b\xa9\x4c\xc0\x6d\xcb\x6b\x8a\x8e";
        address recovered_pk_2;
        recovered_pk_2 = epervier.recover(message, sig, false);
        assertEq(pk_2, recovered_pk_2);
    }

    function testVector3() public view {
        // public key
        // forgefmt: disable-next-line
        address pk_3 = address(728199263750570446964354330903202655824594974439);

        // signature s1
        // forgefmt: disable-next-line
        uint[512] memory tmp_s1 = [uint(12230), 110,33,170,118,3,86,91,12011,12136,28,164,12242,159,8,12201,12149,12212,178,12153,194,295,91,70,12261,36,171,12009,12144,12154,260,20,11970,84,269,12182,132,12193,154,12264,165,12067,12265,0,12062,12192,32,12074,112,71,12244,20,82,111,141,12285,12013,39,12124,12181,12084,184,11929,118,12053,12269,12184,11974,55,540,12268,17,12268,37,431,230,12072,118,12042,12146,174,12210,12206,131,17,334,12262,11872,12211,12201,28,12196,15,12137,77,12275,12227,12098,165,12258,121,12260,181,93,68,12274,12225,12241,87,12193,12167,180,12260,149,66,11978,6,85,12276,12226,12086,12079,12133,12254,12218,101,93,11965,12251,176,12273,12103,12208,114,12196,105,12167,12160,10,11969,12171,12143,171,12250,18,174,324,222,268,12090,90,11955,10,0,12243,141,28,98,12222,12040,12259,11992,169,30,68,12230,169,12227,36,44,317,12165,11994,343,18,12260,123,144,245,243,238,12000,224,12263,219,57,12164,12212,0,126,12019,12058,25,12001,12167,12191,12104,386,180,12275,12000,12263,12263,12222,12119,12218,88,12023,12159,12167,12059,12242,10,12247,49,72,19,79,11911,8,36,229,218,332,12246,12120,84,12008,102,12244,265,237,12137,12075,12208,12252,10,227,12229,90,12076,139,40,37,327,164,12036,64,53,12064,127,213,61,157,12180,12079,12128,12166,175,12287,12059,12083,12214,12284,12232,202,85,11947,11972,12249,12114,12077,12129,12229,12076,67,12233,90,70,19,51,12006,12105,12171,12156,12288,6,12185,194,12051,12091,12240,12078,256,12257,21,12045,44,12148,367,130,20,145,12221,12260,12102,10,12114,12233,12085,107,12016,12241,12002,90,12226,297,12264,34,128,12281,12242,12125,12018,29,12162,12215,12071,203,44,12081,39,10,12285,114,12190,12216,12070,242,12190,215,73,12243,84,12285,12,142,27,12180,157,12041,12086,12249,83,12072,12097,70,12283,12272,97,60,12285,12165,12089,60,12186,283,12212,12269,144,12207,12204,12241,114,57,12213,216,62,107,178,84,12239,12136,112,12265,47,12272,226,12189,12155,12241,127,12232,12186,12192,12272,12096,12133,12125,68,174,12198,125,12269,157,3,12275,12127,12157,30,16,12230,58,12229,114,165,101,12101,123,138,12139,215,12057,12173,12281,12268,11998,20,153,12271,89,12256,99,39,106,12236,260,30,280,23,130,12194,12161,16,126,324,110,216,11997,65,12035,140,171,12214,12286,12138,12150,192,40,12265,164,12288,12238,12223,116,12161,1,219,12187,12146,130,12270,12101,128,12271,189,99,12062,34,12078,12176,182,278,61,182,85,12156,12288,12028,12171,11985,143,12189,12070,26,12252,114,12224,11,12176,43,12198,12115,246,109,226,12198,12164,12143,21,12105,127];

        // signature s2
        // forgefmt: disable-next-line
        uint[512] memory tmp_s2 = [uint(82), 363,12149,12287,55,12245,48,61,162,12287,65,12276,11987,261,12217,12199,12198,12132,12241,26,11982,343,99,129,12101,12155,12103,12145,166,12130,209,11962,12244,113,150,173,12279,12013,192,201,12217,12209,12045,12243,12148,12231,54,12139,72,12100,49,12191,38,12042,12205,12203,12276,12024,12173,39,349,4,255,132,67,188,12087,12241,12193,12204,37,12279,12214,12279,105,196,108,196,12246,134,9,12168,12224,12026,12086,89,223,116,136,147,12134,12233,12050,387,136,22,12089,12116,167,90,12051,11867,28,12068,56,235,90,134,26,88,22,12155,157,12148,105,49,192,10,12065,307,12203,12183,12112,74,12146,128,39,174,12243,3,102,219,68,165,209,248,36,241,171,12193,59,129,316,12236,197,12,38,12165,12185,18,12278,168,12271,12256,12247,12188,20,222,104,12259,140,12211,12154,10,12120,39,98,12169,44,12269,48,148,119,12157,265,62,12179,11995,12133,12267,81,44,12286,117,135,12214,12228,12225,12024,44,12255,277,60,74,158,66,12162,11953,53,136,12247,84,12167,44,12202,183,46,130,60,12229,163,12224,12104,59,91,12174,87,12194,12090,170,63,38,12238,12176,12091,185,189,67,12189,95,221,125,138,12273,132,105,18,12167,65,125,172,32,58,83,43,12094,12240,11977,12218,169,12254,123,149,12233,53,12056,58,11918,146,133,12118,77,40,52,12231,35,21,12219,12278,12087,67,12060,42,12242,12236,12258,12248,38,12160,14,396,12284,12259,105,12151,12159,122,11778,217,12120,12202,165,2,150,12119,12037,12278,12231,12284,299,12264,12236,39,12204,12243,12150,12257,12192,12169,233,36,207,12013,12077,12222,70,12037,389,123,12180,285,99,12225,211,359,12218,12221,12071,198,12155,154,12120,12053,9,90,12238,12220,224,118,19,12250,12006,12031,292,131,12184,1,45,12228,156,12079,12218,12176,154,105,87,12137,111,15,12019,12218,128,155,108,12149,12093,12150,11911,12069,12284,50,12195,87,12202,12071,11989,83,12248,12219,394,178,12170,262,23,12102,271,156,52,12178,12232,12252,190,12125,11859,12248,270,12254,169,12248,52,12254,36,124,12182,4,51,312,75,129,12130,12272,120,91,64,12214,154,11939,53,12280,12206,188,135,12126,12159,12278,107,12284,12123,18,76,12194,12240,12165,19,12036,12039,12192,12171,78,12066,149,159,46,12193,19,12259,12247,128,64,163,117,313,12213,12235,42,12285,11986,12262,12267,12256,12264,12147,111,145,415,146,12216,12165,12105,11944,12283,12120,106,401,151,52,12212,12087,12162,12131,207,88,55,126,12081,11767,73,12135,5,12033,150,12130,12185,12214,209,12162,92,12261,12239,12245,12125,70,12237,12251,84,134,276,48,12179,231,12227,12211];

        ZKNOX_falcon_epervier.Signature memory sig;
        // signature s2 inverse ntt
        // forgefmt: disable-next-line
        uint[512] memory tmp_s2_inv_ntt = [uint(12138), 958,5209,5769,7917,4686,8137,7243,3676,2324,6718,3771,2433,7027,11773,11250,5737,7732,6006,7243,11337,11928,11058,11914,1534,2971,3149,6477,3579,1958,5207,8771,11757,326,3591,4357,10309,9854,7135,2899,1601,1414,6254,2056,8609,517,1992,7708,8919,11585,11656,152,7968,7117,8842,7092,1912,627,11375,8480,10332,6369,3593,2518,3956,11293,7096,1666,2190,1525,10312,11189,1455,11977,4011,4122,11284,11627,25,3204,9963,12202,9334,5822,3125,3935,7189,10711,3515,8436,4024,11560,5989,1340,12121,4690,1007,11798,5554,5057,7656,6,11609,3808,8535,12115,9003,3540,356,7110,3188,5370,6647,7698,314,1955,10930,6670,825,2071,8839,8882,1959,10062,1497,11368,1748,2850,8372,10148,4990,582,1877,8439,1842,796,7883,2922,2398,909,8311,8035,8286,7464,3993,5991,2887,9056,6471,10071,1464,7154,11085,10536,3542,3601,9343,8471,4463,12242,946,8604,2017,7220,8811,3774,5484,2028,3655,2236,8121,8189,7870,10716,550,4775,10361,8216,11179,6290,11537,2836,10268,1295,1004,9498,11488,4787,10386,1674,11736,10552,6505,5434,139,5327,9254,3877,1876,602,10918,8222,12200,11269,11543,129,2951,10466,6365,282,4812,4883,1715,9559,4927,9801,8828,7680,8957,11084,8414,8850,8954,9496,2273,6907,11229,4234,177,283,4921,4492,12262,11492,7951,7465,9958,11451,5879,4926,7585,6335,1866,4671,5017,6241,2379,9485,3402,3566,9229,7320,9603,10016,11093,5845,6794,6725,473,11647,4670,4535,22,3374,9602,3617,905,10664,1765,3306,10149,10528,8100,7379,9212,8449,2372,905,5988,6955,8866,377,2322,7374,4326,2534,10280,7496,2592,162,8408,5871,10926,467,4117,6720,8525,11324,5910,1073,9330,7723,2173,9946,10538,8612,5128,5833,4591,3636,8668,3064,4022,1850,650,889,1385,12032,7249,1441,826,2415,2353,5115,3746,4585,9114,1974,10536,11007,11940,993,1689,7814,3651,6595,7086,5463,7216,11082,8193,9076,3921,2456,10081,3429,6511,352,11601,7238,2301,7847,6767,8661,505,3293,6742,856,9923,7295,5793,2533,3889,8135,4904,6398,8900,2754,720,6088,7929,7110,10816,4086,8866,3751,1388,10065,3929,9280,6979,3461,6969,7938,4623,12170,10712,9027,2953,9661,5471,4935,4050,11370,11105,3304,633,5385,1334,1614,7633,2913,8318,11166,4139,8721,12223,620,1362,8189,9771,8831,10401,2502,11533,3679,1698,1836,9,4379,7282,4582,2392,6434,4791,5133,7121,8720,5907,11927,7718,5485,11312,6157,11864,7667,3745,9179,9972,1226,5404,6714,6544,1833,1846,3427,10846,5600,2377,6498,10850,2957,5034,886,10658,5303,9699,3784,171,3424,4793,12181,6774,2029,7295,4691,10708,8310,899,4990,5182,9384,1700,8703,10212,11557,6365,5962,3651,3503,3699,3687,2497,8225,623,11371,8407,6610,3728,1988,7632,2708,9653,4753,2844,5347,6895,6386,4639,8783,6819,5606,6943,1208,11468,10971,1283,2409,9311,3330,995,3754];
        for (uint256 i = 0; i < 512; i++) {
            sig.s1[i] = tmp_s1[i];
            sig.s2[i] = tmp_s2[i];
            sig.hint[i] = tmp_s2_inv_ntt[i];
        }
        // message
        bytes memory message = "We are ZKNox, you already know!!";
        sig.salt =
            "\x5a\x54\x83\x5f\x8b\x04\xd4\xc0\xb2\x96\x67\xba\xeb\x0c\x32\x58\x80\x9e\xe6\x98\xdb\xc0\x35\x36\xa1\xc9\x36\xc8\x11\xf6\xe6\xf6\x92\x10\xf5\x63\x20\x80\x06\x49";
        address recovered_pk_3;
        recovered_pk_3 = epervier.recover(message, sig, false);
        assertEq(pk_3, recovered_pk_3);
    }

    function testVector4() public view {
        // public key
        // forgefmt: disable-next-line
        address pk_4 = address(728199263750570446964354330903202655824594974439);

        // signature s1
        // forgefmt: disable-next-line
        uint[512] memory tmp_s1 = [uint(12211), 12271,315,12246,12048,50,12234,12150,139,12157,12175,213,130,239,38,12213,144,12244,12268,12198,12232,102,154,12256,126,52,38,12276,6,86,11991,69,12263,12280,636,139,12262,12183,12194,12285,12259,185,12101,12119,170,44,88,12120,12225,278,183,11909,9,12158,12262,96,26,12086,153,12261,12208,15,12154,190,12121,11991,185,119,12148,12283,12216,12199,338,12070,12034,12075,40,44,184,12198,26,12107,12172,154,20,79,12259,69,218,12053,424,95,238,12124,12209,12220,28,12129,12118,139,200,12188,205,12282,11911,12284,12083,301,113,92,12205,195,62,12156,11991,203,11996,24,149,236,12147,194,215,12256,246,12052,90,12018,107,12070,187,12067,73,12272,12099,272,177,87,12249,12194,12123,197,171,198,12209,24,179,12243,249,84,12046,12258,12014,144,12164,130,12058,12255,52,12064,12162,125,12176,12072,21,12253,12095,12193,12154,12274,110,59,87,163,92,53,12233,108,120,12285,176,12223,12257,12211,70,12102,12279,12286,178,12193,443,12183,12208,11965,12088,74,382,331,12180,12234,141,59,12004,12202,12262,12090,234,12,128,42,11933,12147,47,12236,12135,12284,2,12160,12045,219,12184,102,11,12255,7,151,12237,91,12233,12099,12288,12222,12172,12077,150,93,45,208,13,11,120,299,12256,275,12090,82,12093,12182,12087,21,168,12241,36,11930,20,12126,62,12063,12244,95,12211,12011,12250,328,12179,34,137,273,12167,12106,171,12204,114,12185,17,12076,12183,12008,49,60,12256,12110,12087,12288,12135,82,257,11922,73,125,12252,12186,50,106,151,12146,12147,12285,59,13,7,0,11951,11857,133,12265,85,12150,12164,12153,25,74,121,128,12149,12117,71,12240,50,12250,307,12206,143,12064,12226,37,12230,42,12280,14,12086,212,12287,149,12058,12230,124,225,12174,28,12091,257,12216,379,161,82,7,12107,130,15,288,268,12284,38,12167,12003,184,12243,12207,46,12209,12230,12275,12173,12,12225,74,117,157,12210,259,55,12055,12284,12185,129,0,12277,12052,252,12014,12128,12237,12173,12180,12147,12282,12214,0,12276,267,12214,38,97,165,151,12215,61,8,56,33,275,12247,164,34,267,12205,219,11955,12208,262,58,12233,12266,88,11,12277,3,12229,87,12181,12183,18,39,212,12172,12077,12226,11962,11981,12231,207,135,292,97,12079,112,12211,31,30,69,12164,12253,38,202,12182,12258,12275,140,132,11,12159,131,12182,12158,243,262,12189,12033,12194,164,8,12273,63,352,293,86,12035,12270,207,12113,411,269,169,12189,77,12276,12169,144,52,12276,12271,98,386,12174,252,127,12198,11932,23,12041,214,12245,12260,494,67,53,170,12164,12240,12144,12150,36,13,57,12045,39,12250,134,12166,12134,32];

        // signature s2
        // forgefmt: disable-next-line
        uint[512] memory tmp_s2 = [uint(90), 12285,12152,12163,12276,12034,29,12066,12251,166,118,48,117,18,26,12220,12248,144,12212,12210,90,12164,117,29,161,140,135,12154,294,328,12036,193,12147,104,21,73,12099,326,11945,12221,12219,12193,36,324,6,11990,12288,12075,12228,12214,12236,12238,90,110,207,12126,12172,12257,188,146,12104,385,73,12219,10,12178,174,211,12285,121,12247,186,12234,95,300,100,206,178,12154,274,12166,12075,12179,11950,372,12233,12101,12132,45,12147,31,167,12122,179,5,12213,12208,12040,12281,279,12160,11926,12227,12131,56,12228,1,12265,56,12224,12242,12277,307,12161,12256,402,25,11990,157,12256,134,12264,12158,12272,12012,12268,12214,22,12216,12027,12070,289,119,45,12268,12112,340,12099,11987,40,16,250,158,153,206,60,12137,13,401,12167,104,406,12171,12196,12135,12148,71,12260,12210,12157,12079,120,11916,12240,12089,12200,99,12097,118,7,12250,301,12277,150,148,64,12234,12117,11997,12275,120,131,12030,12101,12191,163,12179,11953,12230,118,19,135,61,12157,41,319,12107,12239,268,12216,69,423,50,200,173,173,89,113,165,12257,128,299,271,12229,12201,133,12065,12150,12070,144,86,12122,12204,12151,12132,12261,395,12275,12058,122,153,12202,245,12035,12198,181,12022,12222,12173,12111,180,264,12062,4,11876,138,166,209,271,12196,138,12119,12017,12269,110,12231,11857,12197,12220,41,12042,12086,66,11,11996,12215,11963,12287,12277,161,12204,79,112,317,42,11846,12277,67,12182,12134,89,186,17,6,12208,128,98,12080,12168,202,103,79,12193,85,12175,12156,12168,11971,12162,12015,6,57,12081,255,12117,12192,25,12040,111,12197,138,351,12168,266,12193,166,12223,12272,147,12218,65,12266,96,30,11993,12141,241,12174,89,12208,12280,12082,116,11912,14,12089,47,23,10,12263,12246,90,12267,8,313,12223,12046,135,11924,122,29,12172,52,18,278,12185,225,12137,12179,16,12081,12102,116,12143,12011,12219,12251,81,12214,12087,12286,12145,241,12175,12250,12224,127,183,12204,21,53,11995,274,163,12252,294,185,12210,128,310,78,70,356,11957,85,219,83,11959,12103,3,12140,300,12195,12027,12272,44,208,12160,209,12171,225,12220,29,231,12281,85,106,12154,12211,12287,90,22,12085,11988,12204,20,12121,282,12235,25,163,12268,12007,12139,12243,12230,12055,125,297,88,12116,105,38,12267,12244,12249,12100,56,211,90,12133,12012,12099,12092,12236,176,12231,12060,65,90,12216,12265,11989,12158,82,12266,12200,58,48,12258,18,12058,11991,12226,12184,11968,199,12236,12273,63,12142,105,12012,119,12233,12275,12228,7,25,12236,12115,12126,12262,12253,12135,90,95,12251,22,12265,12033,12229,12284,12224,12139,12237,12231,167,12227,47,12276,233];

        ZKNOX_falcon_epervier.Signature memory sig;
        // signature s2 inverse ntt
        // forgefmt: disable-next-line
        uint[512] memory tmp_s2_inv_ntt = [uint(2859), 1743,500,7966,3142,3457,9718,885,12003,8313,11665,1672,7369,1358,3484,10914,4602,10349,11494,4972,4776,4883,8849,7657,11548,7347,10923,9946,12047,3664,4566,7729,11436,7613,409,9231,11858,8452,5115,2226,6395,11706,12092,10416,6399,10892,3177,5494,10112,9371,5589,389,7720,5765,3819,9363,10248,1235,10642,3166,1276,11023,8178,11265,3803,6588,11207,208,1280,7578,3273,10226,403,9478,9853,3432,4270,8689,2015,1187,620,11208,12156,917,5467,11821,2277,2630,1454,349,11121,5081,8502,6472,7030,5024,8283,7997,3186,462,1964,4798,1959,621,7018,7515,854,4979,3257,1638,10003,4985,8681,478,268,2312,10674,4901,1456,6208,12252,8912,4133,10178,9828,488,5611,5158,4079,8124,7091,1309,6610,6858,10248,7594,123,9744,1922,10956,9438,7777,2583,9384,5089,10826,3318,3155,10145,6537,3908,961,8912,5562,12020,10407,2255,1846,7214,8335,3343,3469,9279,4908,1160,592,9789,2146,875,10400,8614,1723,7317,3502,4291,7554,10795,9096,9226,11530,6996,12237,3460,9154,10974,5175,1254,5410,2102,5751,10105,8574,8012,8299,3815,224,3246,6061,1047,6050,3864,11464,11816,4405,6560,7925,5795,10327,7220,7886,5275,334,5870,6681,11386,10974,12138,944,2940,9998,3359,7998,10858,4130,6123,5172,7109,5002,3376,1573,6739,8928,3974,7913,5037,2025,8085,4170,1172,5204,10876,9823,3073,5941,8209,3494,193,4937,10413,11251,7866,3864,3376,2060,288,625,4310,3526,10956,1894,3255,10143,4112,7590,8311,7416,5441,12239,6865,9180,9795,1959,10988,2631,4087,3960,5961,6677,3106,3015,5626,10993,2501,9412,6996,5394,2646,7832,8598,11985,739,11608,5622,8794,1988,11661,8915,7190,2237,5183,9728,6638,1244,982,10678,7538,1348,545,4277,3729,6139,737,7373,2410,3348,7756,2464,3627,8728,2356,812,3019,2682,4807,7376,2595,12288,4252,9295,8028,6078,307,8825,11825,701,10916,7794,273,7367,6356,6243,3909,11354,1406,10792,8397,10552,2357,2813,5588,76,2573,3992,11150,11360,5387,5216,5182,10685,10383,3169,12170,4124,8667,3880,5029,134,2806,3854,2612,7196,4334,3018,10957,5310,8308,317,12250,4711,11342,8609,8047,2058,230,11281,1547,10687,10714,769,12274,681,6411,3008,2981,3624,6944,1087,9918,2576,4112,9156,135,7684,7243,9323,2671,7396,8449,5636,10198,5374,1393,8516,1424,9306,9795,806,7448,2831,6451,2223,9118,2400,8238,1910,3713,6524,771,388,3710,8430,12139,9579,3645,7284,25,10944,1066,2608,11890,12016,11070,9928,1695,3985,6986,12104,994,11860,6900,10184,689,10890,6653,3875,1081,5531,1822,11142,5973,1960,11431,2395,1206,9185,1546,6374,10762,11413,5556,3594,7019,4558,8388,5292,372,2386,10032,11015,9137,205,1432,3213,5339,647,3429,3068,1673,6285,4416,2099,4900,2878,4642,3321,9711,7669,3235,6515,3829,10453,9236,4395,10651,3095,9965,857,11357,3757,4279,4726,2941];
        for (uint256 i = 0; i < 512; i++) {
            sig.s1[i] = tmp_s1[i];
            sig.s2[i] = tmp_s2[i];
            sig.hint[i] = tmp_s2_inv_ntt[i];
        }
        // message
        bytes memory message = "Practical security on the chain.";
        sig.salt =
            "\xc3\xff\x24\xbc\x6b\x6d\x7a\x3d\x30\x7c\xe7\xb1\x73\x1e\x7d\xf5\x96\x90\xd0\x53\x0d\x7f\x2f\x5b\xb9\xed\x37\xd1\x80\x16\x9a\x6c\x1b\xb0\x22\x25\x2a\xb8\xcc\x68";
        address recovered_pk_4;
        recovered_pk_4 = epervier.recover(message, sig, false);
        assertEq(pk_4, recovered_pk_4);
    }
}
